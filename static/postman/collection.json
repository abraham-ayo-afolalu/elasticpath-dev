{
  "info": {
    "name": "EPCC - Oct 4, 2024",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "accountAddresses",
      "item": [
        {
          "name": "Get account addresses",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "95ab7b79-ff4f-4b46-a590-3b06e9b66247",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountAddressId\", accountAddressId)",
                  "d.each((item, index) => pm.environment.set(`accountAddressId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get account address",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "356d4361-3dd4-43d6-b16a-9198499c7d85",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an address",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"address\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"name\": \"Home\",\n    \"phone_number\": \"(555) 555-1234\",\n    \"instructions\": \"Leave behind bin\",\n    \"company_name\": \"Ron Swanson Enterprises\",\n    \"line_1\": \"1 Sunny Street\",\n    \"line_2\": \"\",\n    \"city\": \"Sunny Town\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f53e0f2b-e401-4f0c-b744-d205d4e9f095",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountAddressId\", accountAddressId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an address",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{accountAddressId}}\",\n    \"type\": \"address\",\n    \"name\": \"Home\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"line_1\": \"1 Sunny Street\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0b729609-3653-45b9-b913-07faed68d65e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an address",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/addresses/{{accountAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "addresses",
                "{{accountAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "23cd035d-b9ae-4807-b5af-944b3c1bcaec",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "accounts",
      "item": [
        {
          "name": "Get account authentication settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/account-authentication",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-authentication"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b6ba444a-a8ce-4036-9e53-8afbe4b7fb09",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "pm.environment.set(\"authenticationRealmId\", d.relationships.authentication_realm.data.id)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an account authentication settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/account-authentication",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-authentication"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_authentication_settings\",\n    \"enable_self_signup\": true,\n    \"auto_create_account_for_account_members\": true,\n    \"account_member_self_management\": \"update_only\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "481e334e-b1d0-433d-8c52-3df54d3f631d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all accounts",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "db3b7ca3-4343-41b0-b197-e2ad7d3a3f80",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)",
                  "d.each((item, index) => pm.environment.set(`accountId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an account",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ff7978b3-3d50-4284-bd85-908208ec72f9",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse\",\n    \"legal_name\": \"Bluefuse Ltd.\",\n    \"registration_id\": \"{{$guid}}\",\n    \"external_ref\": \"Bluefuse Ref\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "873364a5-0c95-4dad-8252-cd3ddfd53cb9",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a sub account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts",
              "host": "{{baseUrl}}",
              "path": [
                "accounts"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse Canada\",\n    \"legal_name\": \"Bluefuse Canada\",\n    \"registration_id\": \"{{$guid}}\",\n    \"parent_id\": \"{{accountID}}\",\n    \"external_ref\": \"Bluefuse Canada Ref\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "47b117ed-e8cf-4eb4-b159-9bf029d07697",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountID\", accountID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an account",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"name\": \"Bluefuse Updated\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2bb1cc4f-7aa8-4ed3-ae61-5cf31184fa47",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an account",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7ca8fd1a-65d9-4ad6-a720-f195db8f68d7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all account members",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members",
              "host": "{{baseUrl}}",
              "path": [
                "account-members"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "af820d9d-b246-430b-a998-589905eb5a37",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMemberID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMemberID\", accountMemberID)",
                  "d.each((item, index) => pm.environment.set(`accountMemberId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all unassigned account members",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/unassigned-account-members",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "unassigned-account-members"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c5162c42-cf84-4834-be19-7eac381e8ef8",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get an account member",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members/{{accountMemberID}}",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "{{accountMemberID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0aac5fac-c68a-42ba-864a-85e7a5ffcc6e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all account memberships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "375f35ad-0b45-4bd0-8a3c-f2ae5348f566",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)",
                  "d.each((item, index) => pm.environment.set(`accountMembershipId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all account memberships using Account Member Id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/account-members/{{accountMemberID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "{{accountMemberID}}",
                "account-memberships"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "eef8f448-6b0d-49f1-8950-799e97fc7d09",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)",
                  "d.each((item, index) => pm.environment.set(`accountMembershipId${index +1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an account membership",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/{{accountMembershipID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "{{accountMembershipID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bccee306-02db-4566-965b-99cb3d376450",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an account membership",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_membership\",\n    \"account_member_id\": \"{{accountMemberID}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "32bf1e57-b72f-47ff-98c3-02075d6cf51a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountMembershipID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"accountMembershipID\", accountMembershipID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete an account membership",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/accounts/{{accountID}}/account-memberships/{{accountMembershipID}}",
              "host": "{{baseUrl}}",
              "path": [
                "accounts",
                "{{accountID}}",
                "account-memberships",
                "{{accountMembershipID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "25c56631-22a2-4ae0-b8f0-f868acc99470",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using OpenID Connect",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"oidc\",\n    \"oauth_authorization_code\": \"auth_code\",\n    \"oauth_redirect_uri\": \"redirect_uri\",\n    \"oauth_code_verifier\": \"pkce_code_verifier\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0b858c48-0d43-43f2-9224-f6f350e2d0b5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using Username and Password",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"password\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"password\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "275d97dc-d76d-41fd-8faf-49be8e4a097e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens with One-time Password Token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"passwordless\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"one_time_password_token\": \"abc123\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fd8cab03-aeb7-4ca7-890e-b3868d194c96",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate account tokens using Self Signup",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"self_signup\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe@gmail.com\",\n    \"password\": \"password\",\n    \"name\": \"joe\",\n    \"email\": \"john.doe@gmail.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7f04636f-7578-41ad-ae98-ee0219b998a6",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Switch account tokens",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/account-members/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "account-members",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "EP-Account-Management-Authentication-Token",
                "value": "{{accountToken}}",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_management_authentication_token\",\n    \"authentication_mechanism\": \"account_management_authentication_token\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9ad6a38e-d05c-4cc6-8630-a6ad3a7ad239",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accountToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"accountToken\", accountToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "authentication",
      "item": [
        {
          "name": "Get client credentials token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{authUrl}}/oauth/access_token",
              "host": "{{authUrl}}",
              "path": [
                "oauth",
                "access_token"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "text/plain",
                "disabled": false
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{clientID}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{clientSecret}}",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "client_credentials",
                  "type": "text"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2b229b13-e3b0-41f5-8b80-de1d580926c3",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accessToken = Array.isArray(d) ? d[0].access_token : d.access_token",
                  "pm.environment.set(\"accessToken\", accessToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get implicit token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{authUrl}}/oauth/access_token",
              "host": "{{authUrl}}",
              "path": [
                "oauth",
                "access_token"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "text/plain",
                "disabled": false
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{clientID}}",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "implicit",
                  "type": "text"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "addcfce2-e0ff-42ac-b29b-95fecd7b83d7",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const accessToken = Array.isArray(d) ? d[0].access_token : d.access_token",
                  "pm.environment.set(\"accessToken\", accessToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "brandsLegacy",
      "item": [
        {
          "name": "Get brand attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "436c3dcb-0956-4495-93a7-b6f0356328ab",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all brands",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": "{{baseUrl}}",
              "path": [
                "brands"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5d83a08f-444e-4193-9a55-9e2973e0515b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const brandID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"brandID\", brandID)",
                  "d.each((item, index) => pm.environment.set(`brandId{index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single brand",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "33e77c66-8541-49bb-a2a4-26931d10c52b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a brand",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": "{{baseUrl}}",
              "path": [
                "brands"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"brand\",\n    \"name\": \"Lamprific\",\n    \"slug\": \"lamprific\",\n    \"description\": \"Lamprific lamps\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6f957a5e-3697-4ec6-8c93-fd353d54d048",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const brandID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"brandID\", brandID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a brand",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{brandID}}\",\n    \"type\": \"brand\",\n    \"name\": \"Lamprific\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "98be308c-d74b-4e0f-bc75-7e5969382b0e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a brand",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandID}}",
              "host": "{{baseUrl}}",
              "path": [
                "brands",
                "{{brandID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "267df72e-d1f9-4718-a617-b0cf48fab0a9",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customerAddresses",
      "item": [
        {
          "name": "Get customer addresses",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6254a984-0f32-4ca2-87c3-65ea7a028639",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerAddressId\", customerAddressId)",
                  "d.each((item, index) => pm.environment.set(`customerAddressId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get customer address",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f4177364-3c56-496a-b961-a55b5178c0b6",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an address",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"address\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"name\": \"Home\",\n    \"phone_number\": \"(555) 555-1234\",\n    \"instructions\": \"Leave behind bin\",\n    \"company_name\": \"Ron Swanson Enterprises\",\n    \"line_1\": \"1 Sunny Street\",\n    \"line_2\": \"\",\n    \"city\": \"Sunny Town\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "732aca68-4d65-4116-a559-43c0df1308eb",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerAddressId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerAddressId\", customerAddressId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an address",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{customerAddressId}}\",\n    \"type\": \"address\",\n    \"name\": \"Home\",\n    \"first_name\": \"Ron\",\n    \"last_name\": \"Swanson\",\n    \"line_1\": \"1 Sunny Street\",\n    \"county\": \"Sunnyville\",\n    \"postcode\": \"SU33 1YY\",\n    \"country\": \"GB\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "33744464-2e17-474a-89e2-af9581e948dd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an address",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}/addresses/{{customerAddressId}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}",
                "addresses",
                "{{customerAddressId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "86711adc-30d3-44c4-bd71-126162ce5005",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "carts",
      "item": [
        {
          "name": "cart_management",
          "item": [
            {
              "name": "Create a custom cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my cart name\",\n    \"description\": \"cart description\",\n    \"discount_settings\": {\n      \"custom_discounts_enabled\": false\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d108d15a-eb63-4f98-aa66-4c480d4f9062",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a cart",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "db51fbed-170a-4e19-8556-bf80aa9453bf",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my cart name\",\n    \"description\": \"cart description\",\n    \"discount_settings\": {\n      \"custom_discounts_enabled\": false,\n      \"use_rule_promotions\": false\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "538981cd-e002-435b-a70c-6e09a107221d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bb4241eb-1d21-4b0f-a4ea-affd19a4e37c",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a promotion preview cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my promotion preview cart\",\n    \"description\": \"cart description\",\n    \"snapshot_date\": \"2099-01-01T00:00:00Z\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7bfbd41f-0dbb-4eef-b314-0665975bad36",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart to preview mode",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"my promotion preview cart\",\n    \"description\": \"cart description\",\n    \"snapshot_date\": \"2099-01-01T00:00:00Z\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e9adf449-a98a-4947-8e45-b90a2fff87f2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart with custom attributes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"cart with custom attributes\",\n    \"description\": \"cart description\",\n    \"custom_attributes\": {\n      \"member_status\": {\n        \"type\": \"string\",\n        \"value\": \"gold\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d5cc8c77-b4c1-4eed-886b-d5835a8859e8",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart with custom attributes",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"cart with custom attributes\",\n    \"description\": \"cart description\",\n    \"custom_attributes\": {\n      \"other_status\": {\n        \"type\": \"string\",\n        \"value\": \"silver\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "699ee8c6-b516-4ad3-8657-a9dd8d16680b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customer_cart_associations",
          "item": [
            {
              "name": "Get customer carts",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7cd8b8df-2470-4c49-b240-8999d3c94de8",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create customer cart association",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/relationships/customers",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "relationships",
                    "customers"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"customer\",\n      \"id\": \"{{customerID}}\"\n    }\n  ]\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "10c8331e-4391-4549-a3ad-7132cbdbea92",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete customer cart association",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/relationships/customers",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "relationships",
                    "customers"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"customer\",\n      \"id\": \"{{customerID}}\"\n    }\n  ]\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "891388c3-b689-49e9-997b-0b475647e88c",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_items",
          "item": [
            {
              "name": "Get cart items",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "71346f88-a7f4-4120-93fd-8465f8b4d25a",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Add product to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 1\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "94eb2e1c-b58a-4120-b95a-01d615ecf264",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add product to cart with shipping group",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 1,\n    \"shipping_group_id\": \"{{cartShippingGroupID}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d822f956-3a83-42a7-8d07-669316635fc4",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add custom item to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_item\",\n    \"name\": \"My Custom Item\",\n    \"sku\": \"my-custom-item\",\n    \"description\": \"My first custom item!\",\n    \"quantity\": 1,\n    \"price\": {\n      \"amount\": 20000,\n      \"includes_tax\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3199a819-81d1-4750-a183-2c4eda9b1aeb",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartitemID\", cartitemID)",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Add a promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_item\",\n    \"code\": \"PROMO1\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "64567a18-8a2d-4feb-a7f0-6af6017fc338",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion via promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/discounts/{{promoCode}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "discounts",
                    "{{promoCode}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1dd03f89-b8fe-4cca-a4e1-c83e1cfc9a6a",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk add items to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"custom_item\",\n      \"name\": \"My Custom Item\",\n      \"sku\": \"my-custom-item\",\n      \"description\": \"My first custom item!\",\n      \"quantity\": 1,\n      \"price\": {\n        \"amount\": 20000,\n        \"includes_tax\": true\n      }\n    },\n    {\n      \"type\": \"cart_item\",\n      \"id\": \"{{productId1}}\",\n      \"quantity\": 1\n    },\n    {\n      \"type\": \"cart_item\",\n      \"sku\": \"{{productSku2}}\",\n      \"quantity\": 1\n    },\n    {\n      \"type\": \"promotion_item\",\n      \"code\": \"{{promoCode}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4abad3b8-a1c1-4388-bb71-5756242e5a7a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "d.each((item, index) => pm.environment.set(`cartItemId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Re-order",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"order_items\",\n      \"order_id\": \"{{orderID}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "15c4e90f-5d58-48d6-8ba3-fe9d7b7e84e0",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Cart merge",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"cart_items\",\n      \"cart_id\": \"{{cartID}}\"\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8d776a86-f89e-4f0d-a5ab-51eb0f435b9c",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a cart item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{cartitemID}}\",\n    \"type\": \"cart_item\",\n    \"quantity\": 2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b3517cfb-5294-4456-9535-486aaa27cff7",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a cart item shipping group",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{cartitemID}}\",\n    \"type\": \"cart_item\",\n    \"shippingGroupID\": \"{{cartShippingGroupID}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "72c94b91-3c18-4d44-8ddc-3104fb693a35",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk update items in cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"id\": \"{{cartItemId1}}\",\n      \"quantity\": 2\n    },\n    {\n      \"id\": \"{{cartItemId2}}\",\n      \"quantity\": 3\n    }\n  ],\n  \"options\": {\n    \"update_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4b850852-4c37-4ada-b758-efed39b5df6d",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a cart item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b2bbc6c5-5e17-4741-8038-f73667075bd4",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete all cart items",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a4511164-28d2-4e88-90bc-631cfdd40e5b",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "tax_items",
          "item": [
            {
              "name": "Add tax item to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"tax_item\",\n    \"name\": \"Tax name\",\n    \"jurisdiction\": \"UK\",\n    \"code\": \"TAX01\",\n    \"rate\": 0.2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "82819fa0-62b7-4cd3-b3df-6533a73b592d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const taxitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"taxitemID\", taxitemID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Bulk add tax items to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"tax_item\",\n      \"name\": \"Tax name1\",\n      \"jurisdiction\": \"BC\",\n      \"code\": \"TAX01\",\n      \"rate\": 0.1,\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"type\": \"cart_item\",\n            \"id\": \"{{cartitemID}}\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"tax_item\",\n      \"name\": \"Tax name2\",\n      \"jurisdiction\": \"BC\",\n      \"code\": \"TAX02\",\n      \"rate\": 0.2,\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"type\": \"cart_item\",\n            \"id\": \"{{cartitemID}}\"\n          }\n        }\n      }\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3e2bb613-8049-4476-8098-26c8ae453fe0",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Update a tax item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes/{{taxitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes",
                    "{{taxitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"tax_item\",\n    \"name\": \"Tax name\",\n    \"jurisdiction\": \"UK\",\n    \"code\": \"MYTAX01\",\n    \"rate\": 0.2\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4380b367-c468-47c6-9036-fe159ee559d3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const taxitemID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"taxitemID\", taxitemID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a tax item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/taxes/{{taxitemID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "taxes",
                    "{{taxitemID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "88fc3f01-f78a-4b01-90f7-8b518eeda3bd",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk delete tax items from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/taxes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "taxes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "15e9bd19-455e-4296-a505-0fb14572473c",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_shipping_groups",
          "item": [
            {
              "name": "Get cart shipping groups",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f347907a-2176-41c4-a088-2a6e65d30f9c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get single cart shipping group",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups/{{cartShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups",
                    "{{cartShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c1e22e84-e35a-41a3-943f-53c55f66ede6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart shipping group",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"shipping_group\",\n    \"shipping_type\": \"shipping-type\",\n    \"tracking_reference\": \"ground_1234\",\n    \"shipping_price\": {\n      \"base\": 500,\n      \"tax\": 0,\n      \"fees\": 0\n    },\n    \"delivery_estimate\": {\n      \"start\": \"2023-04-25T00:00:00.000+00:00\",\n      \"end\": \"2023-04-29T00:00:00.000+00:00\"\n    },\n    \"address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"phone_number\": \"111-222-3333\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"postcode\": \"92801\",\n      \"county\": \"Orange\",\n      \"country\": \"US\",\n      \"region\": \"CA\",\n      \"instructions\": \"Leave at porch\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c97b80a1-8e80-4a3b-9340-a587ea6bc577",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a cart shipping group",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/shipping-groups/{{cartShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "shipping-groups",
                    "{{cartShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"shipping_group\",\n    \"shipping_type\": \"shipping-type\",\n    \"tracking_reference\": \"ground_5678\",\n    \"shipping_price\": {\n      \"base\": 500,\n      \"tax\": 0,\n      \"fees\": 0\n    },\n    \"delivery_estimate\": {\n      \"start\": \"2023-05-01T00:00:00.000+00:00\",\n      \"end\": \"2023-05-05T00:00:00.000+00:00\"\n    },\n    \"address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"phone_number\": \"111-222-3333\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"postcode\": \"92801\",\n      \"county\": \"Orange\",\n      \"country\": \"US\",\n      \"region\": \"CA\",\n      \"instructions\": \"Leave at porch\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7755fe8e-03ea-4911-8f7e-788f765e1c15",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartShippingGroupID\", cartShippingGroupID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "custom_discounts",
          "item": [
            {
              "name": "Add custom discount to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"custom-discount-external-id\",\n    \"discount_engine\": \"Custom Discount Engine\",\n    \"amount\": -1000,\n    \"description\": \"custom discount description\",\n    \"discount_code\": \"custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2ed2544d-aa64-4bc2-bbee-e8d95f798e01",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update custom discount for cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"updated-discount-id\",\n    \"discount_engine\": \"Updated Discount Engine\",\n    \"amount\": -2000,\n    \"description\": \"updated custom discount description\",\n    \"discount_code\": \"updated-custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e484865b-293a-46c4-a7fd-717ddffca854",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete custom discount from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "752bf83a-7d44-4740-9f91-03abb1aed6ac",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Add custom discount to cart item",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"custom-discount-external-id\",\n    \"discount_engine\": \"Custom Discount Engine\",\n    \"amount\": -1000,\n    \"description\": \"custom discount description\",\n    \"discount_code\": \"custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0b2d8b5c-66c5-448a-8b66-0170d76bb389",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update custom discount for cart item",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"custom_discount\",\n    \"external_id\": \"updated-discount-id\",\n    \"discount_engine\": \"Updated Discount Engine\",\n    \"amount\": -2000,\n    \"description\": \"updated custom discount description\",\n    \"discount_code\": \"updated-custom-code\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d7e57c16-6e1a-44fc-bf24-c82176a26009",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete custom discount from cart item",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/items/{{cartitemID}}/custom-discounts/{{customdiscountID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "items",
                    "{{cartitemID}}",
                    "custom-discounts",
                    "{{customdiscountID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3a22a855-c437-465d-aa21-a1de46604cd9",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Bulk add custom discounts to cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": [\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -1000,\n      \"description\": \"Custom discount description\",\n      \"discount_code\": \"cart-custom-promo-code\"\n    },\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-item-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -500,\n      \"description\": \"custom discount description\",\n      \"discount_code\": \"item-custom-promo-code\",\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"id\": \"{{cartitemID}}\",\n            \"type\": \"cart_item\"\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"custom_discount\",\n      \"external_id\": \"custom-item-discount-external-id\",\n      \"discount_engine\": \"Custom Discount Engine\",\n      \"amount\": -500,\n      \"description\": \"custom discount description\",\n      \"discount_code\": \"custom=item-custom-promo-code\",\n      \"relationships\": {\n        \"item\": {\n          \"data\": {\n            \"id\": \"{{cartitemID}}\",\n            \"type\": \"custom_item\"\n          }\n        }\n      }\n    }\n  ],\n  \"options\": {\n    \"add_all_or_nothing\": false\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "833e316e-5b9d-480f-8fc2-834a1440eb7c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customdiscountID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customdiscountID\", customdiscountID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Bulk delete custom discounts from cart",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/custom-discounts",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "custom-discounts"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "05bef1b5-ca50-4e75-bb96-d2c82faaf95d",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_payment_intent",
          "item": [
            {
              "name": "Setup a Stripe Payment Intent for the cart",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"options\": {\n      \"receipt_email\": \"your_receipt_email@email.com\",\n      \"automatic_payment_methods\": {\n        \"enabled\": true\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f7a88883-cb7f-49aa-9329-ffd7134ede60",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Stripe Payment Intent for the cart",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/carts/{{cartID}}/payments/{{paymentIntentId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "carts",
                    "{{cartID}}",
                    "payments",
                    "{{paymentIntentId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "84b58159-fa03-4cc2-ac77-c3f80a590fec",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const cartID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"cartID\", cartID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "catalog",
      "item": [
        {
          "name": "Get shopper catalog",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog",
              "host": "{{authUrl}}",
              "path": [
                "catalog"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b455d09a-e2b1-4470-b432-154f56ba5e9a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all hierarchies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "491858b7-5142-4226-9076-f6a33be1ef36",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)",
                  "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get hierarchy by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c23c502c-f1c3-4c5d-b8b0-e9cdc9fb2c57",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get hierarchy's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/children",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bd9d7640-b706-4323-b27c-c091d481b65f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get hierarchy's nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3c8830e0-de79-42aa-b92e-377d11750517",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c9da1c5e-098b-4656-a5ed-817845a77dad",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get node by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9ab4745d-d298-460a-b0c7-4f10bfccdc6e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get node's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}/relationships/children",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8d6d2786-5cb7-4567-a945-8e19d2e05b5a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "82ac50bb-3154-4be6-bd19-5588fb2cd53f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get product by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/products/{{productId}}",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0b73ffca-88ae-4804-840f-59fab32e30b7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/hierarchies/{{hierarchyId}}/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "hierarchies",
                "{{hierarchyId}}",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1e995920-d13a-4848-9d4f-d31a67ad561e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a node's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}/catalog/nodes/{{nodeId}}/relationships/products",
              "host": "{{authUrl}}",
              "path": [
                "catalog",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "643e4e47-e146-4b07-829e-89c7b45c0197",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "catalogs",
      "item": [
        {
          "name": "catalog_configuration",
          "item": [
            {
              "name": "Get all catalogs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c2f13c35-8627-4b82-b9e8-48976b73394f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogId\", catalogId)",
                      "d.each((item, index) => pm.environment.set(`catalogId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get catalog by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ee7c8fa2-ac31-4345-8865-5eee006f1610",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create catalog",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"catalog\",\n    \"attributes\": {\n      \"name\": \"Playtend Games\",\n      \"description\": \"Playtend brand games catalog\",\n      \"hierarchy_ids\": [\n        \"{{hierarchyId}}\"\n      ],\n      \"pricebook_id\": \"{{pricebookId}}\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "59983b24-4752-4b5e-b24f-e112127e7317",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogId\", catalogId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update catalog",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{catalogId}}\",\n    \"type\": \"catalog\",\n    \"attributes\": {\n      \"name\": \"Playtend Games\",\n      \"description\": \"Playtend Games catalog\",\n      \"hierarchy_ids\": [\n        \"{{hierarchyId}}\"\n      ],\n      \"pricebook_id\": \"{{pricebookId}}\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "97616908-d241-4251-8094-c03b694aec0b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c116107d-97e8-4227-a86a-c8fe30f0421d",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_rules",
          "item": [
            {
              "name": "Get all rules",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1a0e0d7c-fb59-4c4d-9d4d-fc345b7d587a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogRuleId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogRuleId\", catalogRuleId)",
                      "d.each((item, index) => pm.environment.set(`catalogRuleId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get rule by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e3af389b-14d8-45d2-857d-f1484756dd79",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create rule",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "EP-Channel",
                    "value": "web",
                    "disabled": true
                  },
                  {
                    "key": "EP-Context-Tag",
                    "value": "vip",
                    "disabled": true
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"catalog_rule\",\n    \"attributes\": {\n      \"name\": \"Preferred Customers\",\n      \"description\": \"Preferred Customers\",\n      \"catalog_id\": \"{{catalogId}}\",\n      \"customer_ids\": [],\n      \"tags\": [],\n      \"channels\": []\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "50ae4056-1fdf-4f58-8ab8-7db664f473ce",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const catalogRuleId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"catalogRuleId\", catalogRuleId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update rule",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"id\": \"{{catalogRuleId}}\",\n    \"type\": \"catalog_rule\",\n    \"attributes\": {\n      \"name\": \"VIP Customers\",\n      \"description\": \"VIP Customers\",\n      \"catalog_id\": \"{{catalogId}}\",\n      \"customer_ids\": [],\n      \"tags\": [],\n      \"channels\": []\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "11e01b5c-87ea-4947-9dd6-1d3002084417",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete rule",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/rules/{{catalogRuleId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "rules",
                    "{{catalogRuleId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "df6f98ea-21be-4831-9bc7-861898d67d84",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_releases",
          "item": [
            {
              "name": "Get all releases",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "dc260d68-050c-44c2-8a77-7e6791b13417",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const releaseId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"releaseId\", releaseId)",
                      "d.each((item, index) => pm.environment.set(`releaseId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get release by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/{{releaseId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "{{releaseId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5af1bbe2-2071-4ccf-8b77-559f158b8b4e",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create release (publish)",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "55b863a1-64b2-47e6-b48f-b179123d9269",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const releaseId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"releaseId\", releaseId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete all releases of a catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "41927b02-bd4f-44a2-b652-709bd6790d7c",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a release of catalog",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/{{releaseId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "{{releaseId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "78490151-b159-4dc0-930d-5c85aebd0ad9",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete latest release of a catalog (rollback)",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f0efeb54-e295-4683-91a8-e086cd6f46cd",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "catalog_by_latest_release",
          "item": [
            {
              "name": "Get latest release",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c1e342b4-6539-4fef-a972-2c871d94a85a",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get all hierarchies",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "07474b06-8255-4153-8d5b-692a8e0b275f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"hierarchyId\", hierarchyId)",
                      "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "33d39ca7-3563-434f-a769-28eaeef7c98b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy's child nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/children",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "children"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e3ec5043-d81d-40fa-9c3e-1e32364c12cc",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get hierarchy's nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/nodes",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3bcbb757-136a-45fb-a790-d824e801987d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "000ed40c-5e94-446c-b1b7-579798ed9a97",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get node by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0170b8f2-d13a-4960-b96a-7043fd280a36",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get node's child nodes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}/relationships/children",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}",
                    "relationships",
                    "children"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1983ea32-f458-43f3-8e13-f9f914fc3d02",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"nodeId\", nodeId)",
                      "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4948ca92-02e7-4d65-924c-201ed3b913b2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productId\", productId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get product by id",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/products/{{productId}}",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "products",
                    "{{productId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f5d32e21-791f-43a1-9b3f-72812a623d2e",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a hierarchy's products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/hierarchies/{{hierarchyId}}/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "hierarchies",
                    "{{hierarchyId}}",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "73f5d17c-7613-4ba8-a7f4-62dd2edf3267",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productId\", productId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a node's products",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{pcmUrl}}/catalogs/{{catalogId}}/releases/latest/nodes/{{nodeId}}/relationships/products",
                  "host": "{{pcmUrl}}",
                  "path": [
                    "catalogs",
                    "{{catalogId}}",
                    "releases",
                    "latest",
                    "nodes",
                    "{{nodeId}}",
                    "relationships",
                    "products"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "dad7d506-0dd1-47ef-aa0c-71c481b91edc",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const productIdpricebookId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"productIdpricebookId\", productIdpricebookId)",
                      "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "categoriesLegacy",
      "item": [
        {
          "name": "Get category attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a6889e59-865e-498b-8de6-dfcdcec5ac6c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all categories",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": "{{baseUrl}}",
              "path": [
                "categories"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "af86d28f-14ca-4ef3-aeef-0ed5263c7a05",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)",
                  "d.each((item, index) => pm.environment.set(`categoryId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single category",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "066635cd-c0e0-4aa9-af17-11b6e1794364",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get categories tree",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/categories/tree",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "tree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "56a0eb51-22ca-47e6-be2d-ced6ca5ed703",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a category",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": "{{baseUrl}}",
              "path": [
                "categories"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"category\",\n    \"name\": \"Desk lamps\",\n    \"slug\": \"desk-lamps\",\n    \"description\": \"For desk lamps...\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3ce7103c-2ccf-4b4b-966d-04dd9e272985",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const categoryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"categoryID\", categoryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a category",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{categoryID}}\",\n    \"type\": \"category\",\n    \"name\": \"Desk lamps\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fb6d33ce-57c3-42e6-b8f8-94cff3e0ee85",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a category",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e6907e9b-1db7-4ade-879a-7a106f3aa2f2",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create parent category relationship",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}/relationships/parent",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"category\",\n    \"id\": \"{{categoryID}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "87d71e79-14de-43b2-afe3-bea93203e5d1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create child category relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryID}}/relationships/children",
              "host": "{{baseUrl}}",
              "path": [
                "categories",
                "{{categoryID}}",
                "relationships",
                "children"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"category\",\n      \"id\": \"{{categoryID}}\"\n    },\n    {\n      \"type\": \"category\",\n      \"id\": \"{{categoryID}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e20617b6-b607-45cf-ba84-f578b7018a30",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "checkout",
      "item": [
        {
          "name": "Checkout as customer",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"customer\": {\n      \"id\": \"{{customerID}}\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"city\": \"Sunny Town\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"Ron\",\n      \"last_name\": \"Swanson\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"city\": \"Sunny Town\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f6511574-0b92-47ca-bbff-c03ddd8b7f0f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout as guest",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"customer\": {\n      \"email\": \"andy@example.com\",\n      \"name\": \"Andy Dwyer\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"Andy\",\n      \"last_name\": \"Dwyer\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"Andy\",\n      \"last_name\": \"Dwyer\",\n      \"company_name\": \"Ron Swanson Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2bc4c9f4-093a-4119-a36e-b271cb95a25a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout as account",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"account\": {\n      \"id\": \"{{accountID}}\",\n      \"member_id\": \"{{accountMemberID}}\"\n    },\n    \"contact\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@email.com\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "38c22a12-823b-4faa-9630-bed2517652b6",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Checkout with account management authentication token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/carts/{{cartID}}/checkout",
              "host": "{{baseUrl}}",
              "path": [
                "carts",
                "{{cartID}}",
                "checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "EP-Account-Management-Authentication-Token",
                "value": "{{accountToken}}",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"contact\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@email.com\"\n    },\n    \"billing_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    },\n    \"shipping_address\": {\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"company_name\": \"John Doe Enterprises\",\n      \"line_1\": \"1 Sunny Street\",\n      \"line_2\": \"\",\n      \"county\": \"Orange\",\n      \"region\": \"CA\",\n      \"postcode\": \"92802\",\n      \"country\": \"US\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "dc3d9bc2-655c-4dcc-89d7-fb8e9f7ab561",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const orderID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"orderID\", orderID)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "collectionsLegacy",
      "item": [
        {
          "name": "Get collection attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0da38ee9-d023-489d-abb2-235f78f2c49a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all collections",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections",
              "host": "{{baseUrl}}",
              "path": [
                "collections"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "62a362c0-d839-46b1-bed4-d550fa089eac",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const collectionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"collectionID\", collectionID)",
                  "d.each((item, index) => pm.environment.set(`collectionId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single collection",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0285df12-6b2b-4325-bfac-2cc959fb37df",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a collection",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/collections",
              "host": "{{baseUrl}}",
              "path": [
                "collections"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"collection\",\n    \"name\": \"Fancy lamps\",\n    \"slug\": \"fancy-lamps\",\n    \"description\": \"For fancy lamps...\",\n    \"status\": \"live\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "15939a01-409c-4f0b-b055-446dfe0dcdb2",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const collectionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"collectionID\", collectionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a collection",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{collectionID}}\",\n    \"type\": \"collection\",\n    \"name\": \"Fancy lamps\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "183940ac-731e-4e75-a8cb-91dd37d57280",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a collection",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/collections/{{collectionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "collections",
                "{{collectionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "407ce301-f1c8-4125-b8bc-e1c9d6cc3e69",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "commerceExtensions",
      "item": [
        {
          "name": "customApis",
          "item": [
            {
              "name": "Get all Custom APIs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "90c8f00b-f4db-4392-abe0-9278395b9b75",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom API",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ff637500-728a-423f-abcc-56e894827aad",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom API",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Wishlist\",\n    \"description\": \"Description for wishlist.\",\n    \"slug\": \"wishlists\",\n    \"api_type\": \"wishlist_ext\",\n    \"type\": \"custom_api\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c4e779e8-817a-4d35-8525-b5179e1ea58c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customApiId\", customApiId)",
                      "const customApiSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customApiSlug\", customApiSlug)",
                      "const customApiType = Array.isArray(d) ? d[0].api_type : d.api_type",
                      "pm.environment.set(\"customApiType\", customApiType)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom API",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Wishlist\",\n    \"description\": \"updated description for wishlist.\",\n    \"slug\": \"wishlists\",\n    \"type\": \"custom_api\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "de940825-abe9-41c3-9341-002f83243ca7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customApiSlug\", customApiSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom API",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e61996f2-fea2-4c1f-abea-0427c2d59541",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customFields",
          "item": [
            {
              "name": "Get all Custom Fields",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2e8fbc67-996b-4f93-8140-5246450325ac",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom Field",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cca2b388-8272-4148-afaa-a975bf3ff3de",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom Field",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Name\",\n    \"description\": \"Name of wishlist.\",\n    \"slug\": \"name\",\n    \"field_type\": \"string\",\n    \"type\": \"custom_field\",\n    \"validation\": {\n      \"string\": {\n        \"min_length\": 0,\n        \"max_length\": 16\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d68b2e14-f35d-4c89-b027-e2e430670dc6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customFieldId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customFieldId\", customFieldId)",
                      "const customFieldSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customFieldSlug\", customFieldSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom Field",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"name\": \"Longer Name\",\n    \"description\": \"Longer name of wishlist.\",\n    \"slug\": \"longer-name\",\n    \"type\": \"custom_field\",\n    \"validation\": {\n      \"string\": {\n        \"min_length\": 0,\n        \"max_length\": 32\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d274ba00-7e13-47e7-ab34-62eb684618d2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customFieldSlug = Array.isArray(d) ? d[0].slug : d.slug",
                      "pm.environment.set(\"customFieldSlug\", customFieldSlug)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom Field",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/settings/extensions/custom-apis/{{customApiId}}/fields/{{customFieldId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "settings",
                    "extensions",
                    "custom-apis",
                    "{{customApiId}}",
                    "fields",
                    "{{customFieldId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "24c335c8-b5b7-4d72-b8e5-b2759eb4ee56",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "customApiEntries",
          "item": [
            {
              "name": "Get all Custom API Entries",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "19d7e546-e99d-48a8-9ce2-2898885bb196",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a Custom API Entry",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b32d3955-b344-49b6-a512-627e6e0898c1",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a Custom API Entry",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"{{customFieldSlug}}\": \"Test Name\",\n    \"type\": \"{{customApiType}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a606a6bb-5a9b-4532-abbb-71af3f442a77",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const customApiEntryId = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"customApiEntryId\", customApiEntryId)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a Custom API Entry",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"{{customFieldSlug}}\": \"Updated Test Name\",\n    \"type\": \"{{customApiType}}\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ebf5751a-e604-4ee8-8196-9dc9d1a9e660",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a Custom API Entry",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/extensions/{{customApiSlug}}/{{customApiEntryId}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "extensions",
                    "{{customApiSlug}}",
                    "{{customApiEntryId}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b25e633a-e550-411a-8f95-101b684f7f0d",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "currencies",
      "item": [
        {
          "name": "Get currency attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ded7dd7a-4618-4e5a-8b59-6b6af58a7e98",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all currencies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies",
              "host": "{{baseUrl}}",
              "path": [
                "currencies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4a8a49ef-4efe-4164-a2ea-1f04b22a9763",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const currencyID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"currencyID\", currencyID)",
                  "d.each((item, index) => pm.environment.set(`currencyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a currency",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "93a38ffb-abe6-42a5-91e9-970539b456ee",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a currency",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/currencies",
              "host": "{{baseUrl}}",
              "path": [
                "currencies"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"currency\",\n    \"code\": \"GBP\",\n    \"exchange_rate\": 1,\n    \"format\": \"£{price}\",\n    \"decimal_point\": \".\",\n    \"thousand_separator\": \",\",\n    \"decimal_places\": 2,\n    \"default\": true,\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b36cfc0d-02ca-49a2-9b7f-d1b16de174f9",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a currency",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"default\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "39b960ad-1bf5-4886-85bd-337eb8b0ed59",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a currency",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/currencies/{{currencyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "currencies",
                "{{currencyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a1b36775-a7fb-40f5-affd-f55fbac71620",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customerAuthenticationSettings",
      "item": [
        {
          "name": "Get customer authentication settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/customer-authentication/",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "customer-authentication",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "dea450aa-ae9c-404c-9d81-70837e58e60d",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "customers",
      "item": [
        {
          "name": "Get customer attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "29fbab5e-fba4-46b5-8656-32e9de3d92ca",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all customers",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": "{{baseUrl}}",
              "path": [
                "customers"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6368f697-5521-4cfe-b5d5-1be3b336bdaa",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerID\", customerID)",
                  "d.each((item, index) => pm.environment.set(`customerId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a customer",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "47f3bc73-c600-4b01-bd9d-7d81e4cba427",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a customer",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": "{{baseUrl}}",
              "path": [
                "customers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"customer\",\n    \"name\": \"Ron Swanson\",\n    \"email\": \"ron@example.com\",\n    \"external_ref\": \"abc123\",\n    \"password\": \"mysecretpassword\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "05256740-eff0-4508-9361-e55cb086e410",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"customerID\", customerID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a customer",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"customer\",\n    \"name\": \"Ron Swanson\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "46f2767d-cdd1-4636-8c5d-6bc6f9ae19d3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a customer",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerID}}",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "{{customerID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "127cb94d-f4e4-4d35-8e63-8cda8736c8f1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Generate customer token",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"token\",\n    \"email\": \"ron@example.com\",\n    \"password\": \"mysecretpassword\",\n    \"authentication_mechanism\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "59cfe0ad-106c-493c-81c5-b0347431ea3f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"customerToken\", customerToken)"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate customer token with OpenID Connect",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/customers/tokens",
              "host": "{{baseUrl}}",
              "path": [
                "customers",
                "tokens"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"token\",\n    \"authentication_mechanism\": \"oidc\",\n    \"oauth_authorization_code\": \"c2490f06-6d8e-4927-99aa-4bf02b419e96\",\n    \"oauth_redirect_uri\": \"https://example-store.com\",\n    \"oauth_code_verifier\": \"0E934PurR8ExVg6Pj7T4kQewxKzWSfSFG5d15FGfww8\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8088d217-bfe0-4e85-bbd9-2329c0d20bc8",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const customerToken = Array.isArray(d) ? d[0].token : d.token",
                  "pm.environment.set(\"customerToken\", customerToken)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "files",
      "item": [
        {
          "name": "Get file attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d6086224-d97f-4f2f-b7a4-32220924b7e1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all files",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files",
              "host": "{{baseUrl}}",
              "path": [
                "files"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "35dfc5b7-9257-423f-a690-70efb1c1e705",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileID\", fileID)",
                  "d.each((item, index) => pm.environment.set(`fileId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a file",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/files/{{fileID}}",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "{{fileID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a057b088-8031-4da1-b092-31dfd3917df9",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a file",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/files",
              "host": "{{baseUrl}}",
              "path": [
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "file_location",
                  "value": "",
                  "type": "text",
                  "disabled": true
                },
                {
                  "key": "public",
                  "value": "",
                  "type": "text",
                  "disabled": true
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9dc4f1cc-7d22-40f9-9d88-8a9bb01e549f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileID\", fileID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a file",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/files/{{fileID}}",
              "host": "{{baseUrl}}",
              "path": [
                "files",
                "{{fileID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "398dcad3-9404-47dd-9e59-de5cbdc5b559",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "flows",
      "item": [
        {
          "name": "Get all flows",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows",
              "host": "{{baseUrl}}",
              "path": [
                "flows"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5c097c76-913e-45ae-9d98-d00c2728206a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const flowID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"flowID\", flowID)",
                  "d.each((item, index) => pm.environment.set(`flowId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6a4a96c6-b991-4cac-bdee-9446eca4ce6b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a flow",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows",
              "host": "{{baseUrl}}",
              "path": [
                "flows"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"flow\",\n    \"name\": \"Products\",\n    \"slug\": \"products\",\n    \"description\": \"Extends the default product object\",\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0ff6dab7-0c27-4141-8ab7-0b6ebd5ab1a1",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const flowID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"flowID\", flowID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a flow",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{flowID}}\",\n    \"type\": \"flow\",\n    \"name\": \"FlowUpdated\",\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "85b8232a-6265-433e-bf77-3108ef1a854c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a flow",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1bf2fb7c-7a96-458c-b13f-5c752867069e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all fields",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "fields"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "adb5097e-8b60-41c4-8299-d3999643961b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)",
                  "d.each((item, index) => pm.environment.set(`fieldId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all fields on a flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "fields"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b74f1719-e2cd-4dcf-8c21-5144c655d18e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)",
                  "d.each((item, index) => pm.environment.set(`fieldId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single field",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "490c05d8-1dca-4c2b-afa9-b8fa90924877",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a field",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/fields",
              "host": "{{baseUrl}}",
              "path": [
                "fields"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"field\",\n    \"name\": \"Product Rating\",\n    \"slug\": \"product-rating\",\n    \"field_type\": \"integer\",\n    \"validation_rules\": [\n      {\n        \"type\": \"between\",\n        \"options\": {\n          \"from\": 1,\n          \"to\": 5\n        }\n      }\n    ],\n    \"description\": \"Average rating as given by our users\",\n    \"required\": false,\n    \"default\": 0,\n    \"enabled\": true,\n    \"order\": 1,\n    \"relationships\": {\n      \"flow\": {\n        \"data\": {\n          \"type\": \"flow\",\n          \"id\": \"{{flowID}}\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "61d807ba-4d84-4735-a849-b5a899908c93",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fieldID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fieldID\", fieldID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a field",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"field\",\n    \"id\": \"{{fieldID}}\",\n    \"field_type\": \"integer\",\n    \"slug\": \"product-rating\",\n    \"name\": \"Product Rating\",\n    \"description\": \"Average rating as given by our users\",\n    \"required\": true,\n    \"default\": 1\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "375328d9-d3f4-4abf-917d-3be3463b8700",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a field",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/fields/{{fieldID}}",
              "host": "{{baseUrl}}",
              "path": [
                "fields",
                "{{fieldID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cd34ae9d-8a2b-44ef-a4d1-524dd63046d2",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an entry",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"entry\",\n    \"FIELD_SLUG\": \"a value\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "82d71855-c612-4c3e-a1eb-7e1d286f2737",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const entryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"entryID\", entryID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single entry",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "477e1f2f-bd66-4ee5-917e-3979c2d5fcfd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an entry",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"entry\",\n    \"id\": \"{{entryID}}\",\n    \"FIELD1_SLUG\": \"value1\",\n    \"FIELD2_SLUG\": \"value2\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f9202b89-4456-4e40-8b25-ead4f3730e5a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a entry",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6eccc77f-6a68-44c1-896e-48d376c64948",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all entries on a flow",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8d9c1662-c9e9-40c3-a374-1a7571e49feb",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const entryID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"entryID\", entryID)",
                  "d.each((item, index) => pm.environment.set(`entryId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create an entry relationship",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{fieldSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{fieldSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    },\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b52c22d7-57dd-43cc-8ef9-00a1ebbaf6e2",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an entry relationship",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{flowSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{flowSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"{RESOURCE_TYPE}\",\n      \"id\": \"{RESOURCE_ID}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9aa4fdea-bbe9-41ba-a1d5-32342392ba63",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a entry relationship",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/flows/{{flowSlug}}/entries/{{entryID}}/relationships/{{flowSlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "flows",
                "{{flowSlug}}",
                "entries",
                "{{entryID}}",
                "relationships",
                "{{flowSlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7cf7bbb5-8d6a-43cb-b028-4fd1cc7154bb",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "gateways",
      "item": [
        {
          "name": "Get all gateways",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/gateways",
              "host": "{{baseUrl}}",
              "path": [
                "gateways"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "86382ff2-e540-4398-b137-289c97b91548",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const gatewaySlug = Array.isArray(d) ? d[0].slug : d.slug",
                  "pm.environment.set(\"gatewaySlug\", gatewaySlug)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a gateway",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/gateways/{{gatewaySlug}}",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "{{gatewaySlug}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "475eda2a-5b72-4b52-a9e7-42b33a681f22",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Manual gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/manual",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "manual"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9e8b4b99-499e-4a66-a961-d1fa35b5c264",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Braintree gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/braintree",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "braintree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"environment\": \"sandbox\",\n    \"merchant_id\": \"{{braintreeMerchantId}}\",\n    \"public_key\": \"{{braintreePublicKey}}\",\n    \"private_key\": \"{{braintreePrivateKey}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4db76d6e-278d-41c7-9952-6fdb6b333546",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"login\": \"{{stripeToken}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8dd1e618-08cd-40f8-8cee-60d97a2e493b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe Intents gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe_payment_intents",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe_payment_intents"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"login\": \"{{stripeToken}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d657d5e5-50bb-4e10-b048-3ca145adf96f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Stripe Connect gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/stripe_connect",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "stripe_connect"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"stripe_account\": \"{{stripeConnectAccountId}}\",\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "394aba61-5220-4d57-8187-f4105582e1e3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Braintree gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/braintree",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "braintree"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"environment\": \"sandbox\",\n    \"merchant_id\": \"{{braintreeMerchantId}}\",\n    \"public_key\": \"{{braintreePublicKey}}\",\n    \"private_key\": \"{{braintreePrivateKey}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c12eb205-c6f0-42f6-baf8-d6b0d0683e2c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update PayPal Express Checkout gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/paypal_express_checkout",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "paypal_express_checkout"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"payer_id\": \"{{merchant account id}}\",\n    \"enabled\": true,\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0d57fec6-7b14-42f9-b9e1-05e3bff234f0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update EP payments Stripe",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/elastic_path_payments_stripe",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "elastic_path_payments_stripe"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"enabled\": true,\n    \"stripe_account\": \"{{stripeConnectAccountId}}\",\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c1eeffb3-b691-412b-adee-77d7efe6da15",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update Authorize Net gateway",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/gateways/authorize_net",
              "host": "{{baseUrl}}",
              "path": [
                "gateways",
                "authorize_net"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"login\": \"{{loginID}}\",\n    \"password\": \"{{password}}\",\n    \"enabled\": true,\n    \"test\": true\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e1a98014-99ed-46b0-8394-042f8f4f1ca9",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "hierarchies",
      "item": [
        {
          "name": "Get all hierarchies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c7671607-e974-41a0-b733-d5af5c4499b5",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)",
                  "d.each((item, index) => pm.environment.set(`hierarchyId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8ca86080-3088-45aa-a8e7-e61edd8964ff",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a hierarchy",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"hierarchy\",\n    \"attributes\": {\n      \"name\": \"Games\",\n      \"description\": \"All the games we sell\",\n      \"slug\": \"games\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "14e3ba1c-72ca-4663-9daa-14e75c052d57",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const hierarchyId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"hierarchyId\", hierarchyId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a hierarchy",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{hierarchyId}}\",\n    \"type\": \"hierarchy\",\n    \"attributes\": {\n      \"name\": \"Games for Kids\",\n      \"description\": \"All the games we sell for kids\",\n      \"slug\": \"games-kids\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a539451a-6f6d-4035-907f-6ab30fa5275a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a hierarchy",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cd631c47-1baf-4aff-9ad0-83145c013660",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a hierarchy's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f78926b5-1f0b-46e2-b3d3-680a907a911f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "integrations",
      "item": [
        {
          "name": "Get integration attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "64e9d4be-ce7f-43ba-a9da-e6dcbf010989",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all integrations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations",
              "host": "{{baseUrl}}",
              "path": [
                "integrations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7f63e8b0-5025-4229-8b4d-7e64afe736fa",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationID\", integrationID)",
                  "d.each((item, index) => pm.environment.set(`integrationId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an integration",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "685b5db8-bb96-4f30-a10b-ccb461fbe795",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an integration",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/integrations",
              "host": "{{baseUrl}}",
              "path": [
                "integrations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"integration\",\n    \"name\": \"Order notification\",\n    \"description\": \"Send an order notification via email with discount code.\",\n    \"enabled\": true,\n    \"observes\": [\n      \"order.created\"\n    ],\n    \"integration_type\": \"webhook\",\n    \"configuration\": {\n      \"url\": \"https://yourwebsite.com/order-created-notification\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c6bbda7a-e575-4806-a6eb-7d2f0e40e6a3",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationID\", integrationID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update an integration",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{integrationID}}\",\n    \"type\": \"integration\",\n    \"observes\": [\n      \"order.created\"\n    ]\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "75fc6e7b-94f0-41df-af4b-938556c7e731",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an integration",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a27be200-c0fb-408a-a5ac-bbe6b3c66167",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2dbab5c5-aca9-47a8-a8ff-aa4e15804fea",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get integration logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1307ede0-111d-4cca-9d23-63be36a0247a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get integration jobs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "jobs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "308c6b06-3b64-4f20-aca4-fbb4f8f8dcbd",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const integrationJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"integrationJobId\", integrationJobId)",
                  "d.each((item, index) => pm.environment.set(`integrationJobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get integration job logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/integrations/{{integrationID}}/jobs/{{integrationJobId}}/logs",
              "host": "{{baseUrl}}",
              "path": [
                "integrations",
                "{{integrationID}}",
                "jobs",
                "{{integrationJobId}}",
                "logs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "260ceb5a-ff70-470a-aa4a-916f8ccf52ec",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "inventories",
      "item": [
        {
          "name": "Get all inventories",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories",
              "host": "{{baseUrl}}",
              "path": [
                "inventories"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c5551282-2fdf-4542-8e3a-6e5b0c7bb34d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get product inventory",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bb6a9ab0-fcdd-4b35-9ee5-311aff3f79b5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get product stock transactions",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ab238373-e52b-4ad4-9b7a-9c778234aff1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product stock transaction",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions/{{transactionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions",
                "{{transactionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "49c41894-e334-4ff4-9b7f-ab8de38bd9b1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a stock transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"stock-transaction\",\n    \"action\": \"increment\",\n    \"quantity\": 3\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "14d24ca9-3015-420f-824d-b4a9c9467f47",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create inventory",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"quantity\": 1000\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c5f8759f-160d-4738-80e7-7e0fd5e0238d",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete inventory",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/inventories/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "inventories",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3cd2ee7d-3e72-4f4e-b38c-ee4ce3da497b",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "jobs",
      "item": [
        {
          "name": "Get all jobs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "jobs"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2b4dfabc-35f3-4d8d-a5af-5887ea5de4ea",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const jobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"jobId\", jobId)",
                  "d.each((item, index) => pm.environment.set(`jobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a job",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}",
              "host": "{{baseUrl}}",
              "path": [
                "jobs",
                "{{jobId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e2ac910d-2537-4d8e-84f5-e900deb14613",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a job",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/jobs",
              "host": "{{baseUrl}}",
              "path": [
                "jobs"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"job\",\n    \"job_type\": \"order_export\",\n    \"filter\": \"gt(created_at,2020-04-28):lt(created_at,2020-04-30):eq(payment,paid)\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "1bc3658e-7ad4-4358-9d46-dbbbc404d248",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "keys",
      "item": [
        {
          "name": "Get all keys",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/application-keys",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "35f35866-1fdd-4c69-88fb-c03445087cd1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a key",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/application-keys",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"application_key\",\n    \"name\": \"Pawnee City Parks and Recreation Department\",\n    \"reserved_rate_limit\": 0\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e6a2506c-0ea5-40b8-a2fa-0d2fc3b27d58",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const keyID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"keyID\", keyID)",
                  "const clientID = Array.isArray(d) ? d[0].client_id : d.client_id",
                  "pm.environment.set(\"clientID\", clientID)",
                  "const clientSecret = Array.isArray(d) ? d[0].client_secret : d.client_secret",
                  "pm.environment.set(\"clientSecret\", clientSecret)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a key",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "41981cc9-c80b-4bdd-aece-268fba29c02b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a key",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e17e8550-2b52-4ff9-9364-06e2fe374dfd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a key",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/application-keys/{{keyID}}",
              "host": "{{baseUrl}}",
              "path": [
                "application-keys",
                "{{keyID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"application_key\",\n    \"name\": \"New Key Name\",\n    \"reserved_rate_limit\": 0\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c477ab2e-835f-4ad1-bd7d-b310c31522c5",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "merchantRealmMappings",
      "item": [
        {
          "name": "Get merchant realm mapping",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4d156e1a-b746-41c0-98ee-c4a69667d72c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantMappingId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"merchantMappingId\", merchantMappingId)",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get merchant realm mapping by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings/{{merchantMappingId}}",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings",
                "{{merchantMappingId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "626b6bbb-8032-49d4-a4a5-10da1c07a9f4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update merchant realm mapping's store prefix",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/merchant-realm-mappings/{{merchantMappingId}}",
              "host": "{{baseUrl}}",
              "path": [
                "merchant-realm-mappings",
                "{{merchantMappingId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"merchant-realm-mappings\",\n    \"prefix\": \"myNewStorePrefix\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "357d3854-f1e4-49f9-877b-449dfcc4b487",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const merchantStorePrefix = Array.isArray(d) ? d[0].prefix : d.prefix",
                  "pm.environment.set(\"merchantStorePrefix\", merchantStorePrefix)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get merchant oauth2 profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{authUrl}}//merchant-oauth2-profiles",
              "host": "{{authUrl}}",
              "path": [
                "",
                "merchant-oauth2-profiles"
              ],
              "query": [
                {
                  "key": "prefix",
                  "value": "{{merchantStorePrefix}}",
                  "disabled": false
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ]
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "252eb29b-62b4-41a6-a1e8-1f93409256ce",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "nodes",
      "item": [
        {
          "name": "Get a node by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "614d5f84-2221-4c03-bc48-b592b7ffaf98",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a node",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Accessories\",\n      \"description\": \"Game accessories\",\n      \"slug\": \"accessories\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "028b89a3-8fbe-4da0-b8bf-4f9f243cb6ff",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a node under parent",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Gaming Keyboards\",\n      \"description\": \"Gaming Keyboards\",\n      \"slug\": \"gaming-keyboards\"\n    },\n    \"relationships\": {\n      \"parent\": {\n        \"data\": {\n          \"id\": \"{{nodeId}}\",\n          \"type\": \"node\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "09465ec3-85c1-49f7-8272-7e0e85364edf",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a node",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{nodeId}}\",\n    \"type\": \"node\",\n    \"attributes\": {\n      \"name\": \"Gaming Keyboards\",\n      \"description\": \"Gaming keyboards for the dedicated player\",\n      \"slug\": \"gaming-keyboards\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d81ea552-2e43-4feb-8939-4819509d22df",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a node",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8a5c8ff5-9483-4b90-b799-e0f50df9bd02",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a node's child nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "children"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "81b683a9-0166-401d-add4-418d6b6ccc34",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create child node relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/children",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "children"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"node\",\n      \"id\": \"{{nodeId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "38cde312-9ba7-4354-a786-748ab7c91757",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a node's parent",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/parent",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"node\",\n    \"id\": \"{{nodeId}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5e2abb95-2917-4572-a4a5-ee4e1deaafd7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a node's parent relationship",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/parent",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "parent"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ada9c499-e18d-4c48-a933-cb923518b04f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a node's products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "262c5e2e-aae5-4b9c-a305-38270c0ffbb4",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create relationships to products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product\",\n      \"id\": \"{{productId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "407b50b1-1935-4087-8d51-564ad9ac3d47",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete relationships to products",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/hierarchies/{{hierarchyId}}/nodes/{{nodeId}}/relationships/products",
              "host": "{{pcmUrl}}",
              "path": [
                "hierarchies",
                "{{hierarchyId}}",
                "nodes",
                "{{nodeId}}",
                "relationships",
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product\",\n      \"id\": \"{{productId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "03e6c8be-ee64-441c-8eca-8b17b64d3dec",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "oidcProfiles",
      "item": [
        {
          "name": "Get OIDC profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6c4210df-d641-44f5-83fa-ac56221bb1b7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get OIDC profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "47cc1fc8-f254-4756-af81-c1fd2dec0afd",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create OIDC profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"name\": \"Identity provider\",\n    \"type\": \"oidc-profile\",\n    \"discovery_url\": \"{{oidcDiscoveryUrl}}\",\n    \"client_id\": \"{{oidcClientId}}\",\n    \"client_secret\": \"{{oidcClientSecret}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f28b2ba2-c88c-49e5-85c1-cddac964e838",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const oidcProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"oidcProfileId\", oidcProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update OIDC profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"name\": \"Identity provider\",\n    \"type\": \"oidc-profile\",\n    \"discovery_url\": \"{{oidcDiscoveryUrl}}\",\n    \"client_id\": \"{{oidcClientId}}\",\n    \"client_secret\": \"{{oidcClientSecret}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b4a1d6e0-c10b-4956-9efb-f674416aa5e1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete OIDC profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/oidc-profiles/{{oidcProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "oidc-profiles",
                "{{oidcProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "549e4c6b-92e2-4207-9435-28679bb0e80d",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "oneTimePasswordTokenRequest",
      "item": [
        {
          "name": "Create One-time Password Token Request",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}/one-time-password-token-request",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}",
                "one-time-password-token-request"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"one_time_password_token_request\",\n    \"username\": \"john.doe\",\n    \"purpose\": \"reset_password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3a97c63a-22d6-4119-8250-199079f473ae",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "orders",
      "item": [
        {
          "name": "orders",
          "item": [
            {
              "name": "Get order attributes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/attributes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "attributes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "19682f11-8476-41d9-a1c5-21b2bdf9c5e5",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get all orders",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2279e543-d90e-42bc-9ff5-6a9847b7dd55",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)",
                      "d.each((item, index) => pm.environment.set(`orderId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get an order",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f6f12c27-3133-4fc1-9e8d-31f0fb19f995",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"shipping_address\": {\n      \"first_name\": \"Ron\"\n    },\n    \"external_ref\": \"external_order_123\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1f6ea810-9a85-4c70-ada9-d1ee9c59d1e5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Fulfill an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"shipping\": \"fulfilled\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "196bbdb0-6c96-407e-9bb1-8d54d960e1a5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Cancel an order",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"order\",\n    \"status\": \"cancelled\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6ad50050-68df-45c0-9cd9-4c5d62292b62",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get customer orders",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "x-moltin-customer-token",
                    "value": "{{customerToken}}",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a12fd344-e562-4d59-ab44-1d2bbcf287df",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)",
                      "d.each((item, index) => pm.environment.set(`orderId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get order items",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/items",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "items"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "de81f393-7b25-4e26-8e13-44bc12f17dfe",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Anonymize orders",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/anonymize",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "anonymize"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"order_ids\": [\n      \"{{orderID}}\"\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9a6b6ab9-2e4b-408b-bd69-f070525edc13",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderID\", orderID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm an order",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"options\": {\n      \"metadata\": {\n        \"order_id\": \"{{orderID}}\",\n        \"statement_descriptor\": \"Confirmed intent\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "642105a6-b4af-4c7e-96a5-15a998c5c224",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "order_shipping_groups",
          "item": [
            {
              "name": "Get order shipping groups",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/shipping-groups",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "shipping-groups"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "4595ed07-324d-4ede-a26b-efcc1f869163",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderShippingGroupID\", orderShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get single order shipping group",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/shipping-groups/{{orderShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "shipping-groups",
                    "{{orderShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5da60bfb-9a30-40a2-aa65-ae165d4f6c9a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderShippingGroupID\", orderShippingGroupID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update an order shipping group",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/shipping-groups/{{orderShippingGroupID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "shipping-groups",
                    "{{orderShippingGroupID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"shipping_group\",\n    \"shipping_type\": \"update_type\",\n    \"tracking_reference\": \"update_reference\",\n    \"delivery_estimate\": {\n      \"start\": \"2025-01-01T00:00:00.000+00:00\",\n      \"end\": \"2025-01-05T00:00:00.000+00:00\"\n    },\n    \"address\": {\n      \"first_name\": \"Ron Update\",\n      \"last_name\": \"Swanson Update\",\n      \"phone_number\": \"222-333-4567\",\n      \"company_name\": \"Update Enterprises\",\n      \"line_1\": \"123 Sunny Street\",\n      \"line_2\": \"\",\n      \"postcode\": \"92801\",\n      \"county\": \"Orange\",\n      \"country\": \"US\",\n      \"region\": \"CA\",\n      \"instructions\": \"Leave at door\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e5059431-2f29-48de-8634-74b24a193e74",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const orderShippingGroupID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"orderShippingGroupID\", orderShippingGroupID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "passwordProfiles",
      "item": [
        {
          "name": "Get Password profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ac7e292d-e7b3-4450-828e-485aefc14b53",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get Password profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8980d2b7-a575-4719-b774-65526506664e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create Password profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"usernameFormat\": \"email\",\n    \"type\": \"password_profile\",\n    \"name\": \"password profile\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6856ff5d-c314-4536-851e-92416cf6f09c",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const passwordProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"passwordProfileId\", passwordProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Password profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"usernameFormat\": \"any\",\n    \"type\": \"password_profile\",\n    \"name\": \"updated password profile\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "37f683a4-fd72-4bc4-81bf-062b951b8dd5",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete Password profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/password-profiles/{{passwordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "password-profiles",
                "{{passwordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b365fbe8-f7fd-466b-8312-1de24d0b752e",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "payments",
      "item": [
        {
          "name": "adyen",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"adyen\",\n    \"method\": \"authorize\",\n    \"payment\": \"##<Adyen token>\",\n    \"options\": {\n      \"shopper_reference\": \"shopper reference\",\n      \"recurring_processing_model\": \"CardOnFile\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ed50e4a8-f586-4741-8101-b0b256383c90",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"adyen\",\n    \"method\": \"purchase\",\n    \"payment\": \"##<Adyen token>\",\n    \"options\": {\n      \"shopper_reference\": \"<shopper reference associated with token>\",\n      \"recurring_processing_model\": \"CardOnFile\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "bc35a9ab-0adb-46ae-b812-280eddc1cebf",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "authorize_net",
          "item": [
            {
              "name": "Authorize by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"authorize_net\",\n    \"method\": \"authorize\",\n    \"payment\": \"<customerProfileID>\",\n    \"options\": {\n      \"customer_payment_profile_id\": \"<customerPaymentProfileID>\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ad5d863a-bef8-4274-8fec-b18957568d2c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"authorize_net\",\n    \"method\": \"purchase\",\n    \"payment\": \"<customerProfileID>\",\n    \"options\": {\n      \"customer_payment_profile_id\": \"<customerPaymentProfileID>\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0785920c-94ea-4323-bd8f-99f007b8ff24",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "braintree",
          "item": [
            {
              "name": "Authorize by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"<braintreeSandboxcustomerID>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2b268d8f-ddf9-4690-96d9-37375f999382",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"<braintreePaymentToken>\",\n    \"options\": {\n      \"payment_method_token\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "35d36f34-3dd6-4d03-9d9a-06a2ab9e10c5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by nonce",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"authorize\",\n    \"payment\": \"fake-valid-nonce\",\n    \"options\": {\n      \"payment_method_nonce\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cf0080c8-de62-4d11-af3c-333a63923827",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by customerID",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"<braintreeSandboxcustomerID>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a968b04f-5028-43d2-8f83-0d0b5944b66d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by nonce",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"fake-valid-nonce\",\n    \"options\": {\n      \"payment_method_nonce\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7b439cba-617c-4942-9070-c0838aee115b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"braintree\",\n    \"method\": \"purchase\",\n    \"payment\": \"<braintreePaymentToken>\",\n    \"options\": {\n      \"payment_method_token\": true\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5dcb2463-6c27-4fc3-8d63-64328543dd09",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "card_connect",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"card_connect\",\n    \"method\": \"authorize\",\n    \"payment\": \"1|14631894265740112494\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fa5f3a87-0e25-4d5c-9fa2-0a2c1613bdee",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"card_connect\",\n    \"method\": \"purchase\",\n    \"payment\": \"1|14631894265740112494\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3f978431-58e6-42c3-9e15-6e4133c7575a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cybersource",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"cyber_source\",\n    \"method\": \"authorize\",\n    \"payment\": \";;;;;;<CybersourceToken>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "cda16ed3-b383-42ad-8b18-659e505ec2f2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"cyber_source\",\n    \"method\": \"purchase\",\n    \"payment\": \";;;;;;<CybersourceToken>\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "172648d3-793e-4aee-b76e-e0ed3a0991f7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "manual",
          "item": [
            {
              "name": "Authorize",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"manual\",\n    \"method\": \"authorize\",\n    \"amount\": 5000,\n    \"paymentmethod_meta\": {\n      \"custom_reference\": \"custom reference\",\n      \"name\": \"payment method name\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f1ded284-dbc4-4bd3-a4a8-1f64cf8090a7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"manual\",\n    \"method\": \"purchase\",\n    \"amount\": 5000,\n    \"paymentmethod_meta\": {\n      \"custom_reference\": \"custom reference\",\n      \"name\": \"payment method name\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0767b069-13d5-41a6-b99e-9536e257c56b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "paypal_express_checkout",
          "item": [
            {
              "name": "Setup Authorize",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"paypal_express_checkout\",\n    \"method\": \"authorize\",\n    \"options\": {\n      \"description\": \"Test description\",\n      \"soft_descriptor\": \"integration test\",\n      \"application_context\": {\n        \"brand_name\": \"TEST brand\",\n        \"locale\": \"en-US\",\n        \"landing_page\": \"LOGIN\",\n        \"shipping_preference\": \"SET_PROVIDED_ADDRESS\",\n        \"user_action\": \"PAY_NOW\",\n        \"return_url\": \"https://your.frontend.url/return\",\n        \"cancel_return_url\": \"https://your.frontend.url/cancel\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fe28406d-db9d-407b-a298-4aa2723f3f1a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Setup Purchase",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"paypal_express_checkout\",\n    \"method\": \"purchase\",\n    \"options\": {\n      \"description\": \"Test description\",\n      \"soft_descriptor\": \"integration test\",\n      \"application_context\": {\n        \"brand_name\": \"TEST brand\",\n        \"locale\": \"en-US\",\n        \"landing_page\": \"LOGIN\",\n        \"shipping_preference\": \"SET_PROVIDED_ADDRESS\",\n        \"user_action\": \"PAY_NOW\",\n        \"return_url\": \"https://your.frontend.url/return\",\n        \"cancel_return_url\": \"https://your.frontend.url/cancel\"\n      }\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d33d7189-b6e4-4513-9a03-d69cbd6492db",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "e459b48b-f390-411d-9d52-7f493a9aaa31",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Capture Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/capture",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "capture"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"options\": {\n      \"soft_descriptor\": \"Test soft descriptor\",\n      \"note_to_payer\": \"Capture note to payer\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ecb20a01-7102-4819-82f1-2bbffe4f4c0c",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Refund a payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/refund",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "refund"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"amount\": 1,\n    \"options\": {\n      \"note_to_payer\": \"Refund note to payer\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "42749243-51b8-4cea-bd89-f5010f47ca00",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"tok_visa\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "60f9560f-1324-4b14-98b4-a6b2a51e6b5a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe\",\n    \"method\": \"purchase\",\n    \"payment\": \"tok_visa\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "7c69a723-e14c-4809-a31c-2dbf406d2d50",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe_intents",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "698ce988-903e-42d5-a5c5-0048589bf2c9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9e58cb7a-0e7f-4d78-8302-2315c4877f25",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"purchase\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b5aad7d0-b4cc-472b-887f-a7fdb975c51b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"method\": \"authorize\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "145badcc-dc11-4048-85d7-813e5459c214",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_payment_intents\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "1bd45eae-4927-44bb-9d8f-8a55ac6f82f7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "stripe_connect",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a2a1e8b2-3a8c-4744-a6f4-99af500eaef8",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "444dd2d0-8993-4e4e-b8b2-910e42c9223a",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"stripe_connect\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "35415fcb-aa35-413a-a78c-bf5dc0487352",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "ep_payments_stripe",
          "item": [
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "491ef52c-aece-490a-a372-f6d19d0f31bc",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment\": \"pm_card_threeDSecureRequired\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\",\n      \"confirm\": true,\n      \"execute_threed\": true,\n      \"confirmation_method\": \"manual\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8bee2881-c1bc-4350-ab99-ffc46af6c8b6",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase by token",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"purchase\",\n    \"payment\": \"pm_card_visa\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "729af223-17c7-4b22-a62f-2df1cf6bf7c3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm Payment",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"options\": {\n      \"return_url\": \"https://your.frontend.url/return\",\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b4ea2628-ba7a-40c3-a1c8-23df6de2ef9d",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Purchase setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"purchase\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d27eeafd-29bd-41b0-9883-aa8ffbf475e3",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Authorize setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/payments",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "payments"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"gateway\": \"elastic_path_payments_stripe\",\n    \"method\": \"authorize\",\n    \"payment_method_types\": [\n      \"card\"\n    ],\n    \"options\": {\n      \"receipt_email\": \"john@example.com\"\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "864f8848-954b-4688-968f-1f6cfe118c6f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Confirm setup",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/confirm",
                  "host": "{{baseUrl}}",
                  "path": [
                    "orders",
                    "{{orderID}}",
                    "transactions",
                    "{{transactionID}}",
                    "confirm"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "f184460e-db8c-49db-8637-d77371c31a0f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"transactionID\", transactionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "personalData",
      "item": [
        {
          "name": "Get related data entries",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/related-data-entries?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "related-data-entries?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "79a6f849-378b-4836-8400-563785ab7fff",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get logs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/logs?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "logs?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f563eb13-c59d-43e9-a487-e92409c42056",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create erasure request",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"resource_id\": \"{{customerID}}\",\n    \"resource_type\": \"customer\",\n    \"type\": \"erasure_request\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a4c0b448-b87b-44b0-a50c-faa69a990b01",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const erasureRequestID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"erasureRequestID\", erasureRequestID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get erasure request",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests/{erasureRequestID}",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests",
                "{erasureRequestID}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "664efcba-53da-45fe-ad81-26b4602d3afa",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get erasure requests",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/personal-data/erasure-requests?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)",
              "host": "{{baseUrl}}",
              "path": [
                "personal-data",
                "erasure-requests?filter=eq(resource_id,{{customerID}}):eq(resource_type,customer)"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d1a124d4-d23b-4d92-aafd-e66853dca334",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update TTL",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}//settings/logs-ttl",
              "host": "{{baseUrl}}",
              "path": [
                "",
                "settings",
                "logs-ttl"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"time_to_live\",\n    \"days\": 20\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ba3860c6-6530-4982-8749-b124555a26ae",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get TTL",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}//settings/logs-ttl",
              "host": "{{baseUrl}}",
              "path": [
                "",
                "settings",
                "logs-ttl"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a39ec88b-a946-48be-8d62-db8eef10cddb",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "pimJobs",
      "item": [
        {
          "name": "Get all Jobs for PIM",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c2f7c0af-9289-44ed-a8c6-e68f564f954f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pimJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pimJobId\", pimJobId)",
                  "d.each((item, index) => pm.environment.set(`pimJobId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a Job for PIM via its ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs/{{pimJobId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs",
                "{{pimJobId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a784b3c7-85f9-4f2c-84b5-88e833a6618e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all Errors for a Job in PIM via its ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/jobs/{{pimJobId}}/errors",
              "host": "{{pcmUrl}}",
              "path": [
                "jobs",
                "{{pimJobId}}",
                "errors"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b8b38eee-7f32-4987-a46e-d504a9ca6a41",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "pricebooks",
      "item": [
        {
          "name": "Get all pricebooks",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c7a6781a-322b-49a1-96bd-421f88a43d81",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pricebookId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pricebookId\", pricebookId)",
                  "d.each((item, index) => pm.environment.set(`pricebookId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a pricebook",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4bc3f688-fc8a-44e1-8835-7bd730705068",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a pricebook",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"pricebook\",\n    \"attributes\": {\n      \"name\": \"Standard Pricebook\",\n      \"description\": \"This is a test price book\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3760557d-b606-4950-bb29-356769a0b2fd",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pricebookId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pricebookId\", pricebookId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a pricebook",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{pricebookId}}\",\n    \"type\": \"pricebook\",\n    \"attributes\": {\n      \"name\": \"Seasonal Sales Pricebook\",\n      \"description\": \"This is a test price book\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "101e7b45-bbd3-4523-8776-aaedd8d46e6e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a pricebook",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cacd698b-0c0d-4dd3-bdff-4c8af3a197aa",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all product prices",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e15de800-4589-49dc-bf39-422f00968453",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const priceId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"priceId\", priceId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)",
                  "d.each((item, index) => pm.environment.set(`priceId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.attributes.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product price by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f2c2c8f6-570c-43a4-bdaf-95b370c5346f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a price",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-price\",\n    \"attributes\": {\n      \"sku\": \"{{productSku}}\",\n      \"currencies\": {\n        \"USD\": {\n          \"amount\": 100,\n          \"includes_tax\": false\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bde352c1-8d1a-40d2-8bb0-881006a83daf",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const priceId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"priceId\", priceId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product price",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{priceId}}\",\n    \"type\": \"product-price\",\n    \"attributes\": {\n      \"sku\": \"{{productSku}}\",\n      \"currencies\": {\n        \"USD\": {\n          \"amount\": 300,\n          \"includes_tax\": false\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "fba47cd0-8893-4967-88a1-1bb8e589daed",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product price",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/pricebooks/{{pricebookId}}/prices/{{priceId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "pricebooks",
                "{{pricebookId}}",
                "prices",
                "{{priceId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ba8cdff2-cb88-4e2f-969b-ed0079f29ff2",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "products",
      "item": [
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e160fd11-df1c-4c63-b1f4-2418b139c00f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.attributes.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product by id",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cd0d0da2-a6b9-4490-b715-9555d0783720",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a product",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Playtend Gaming Headset\",\n      \"slug\": \"PGH69345\",\n      \"sku\": \"PGH69345\",\n      \"description\": \"Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"mpn\": \"1234-5678-ABCD\",\n      \"upc_ean\": \"123456\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "26ee0719-a977-4c1a-b72e-4ae6efd9295b",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productId\", productId)",
                  "const productSku = Array.isArray(d) ? d[0].attributes.sku : d.attributes.sku",
                  "pm.environment.set(\"productSku\", productSku)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"id\": \"{{productId}}\",\n    \"attributes\": {\n      \"name\": \"Playtend Gaming Headset\",\n      \"slug\": \"PGH69345\",\n      \"sku\": \"PGH69345\",\n      \"description\": \"Playtend brand top of the line gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"mpn\": \"9934-5678-ABCD\",\n      \"upc_ean\": \"125656\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "916716db-2bf0-4fb1-b12a-c95231412223",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ebc01437-d399-414d-95cd-a06d2155e106",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a bundle",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products",
              "host": "{{pcmUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Gaming Headset Bundle\",\n      \"slug\": \"PGH69345-B\",\n      \"description\": \"2 x Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"components\": {\n        \"headsets\": {\n          \"name\": \"Headsets\",\n          \"options\": [\n            {\n              \"id\": \"{{productId}}\",\n              \"type\": \"product\",\n              \"quantity\": 2\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "18844aea-7170-436b-9ab0-f4cfa2974db8",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const bundleId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"bundleId\", bundleId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a bundle",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{bundleId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{bundleId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{bundleId}}\",\n    \"type\": \"product\",\n    \"attributes\": {\n      \"name\": \"Gaming Headset Bundle\",\n      \"slug\": \"PGH69345-B\",\n      \"description\": \"5 x Playtend brand gaming headset\",\n      \"status\": \"live\",\n      \"commodity_type\": \"physical\",\n      \"components\": {\n        \"headsets\": {\n          \"name\": \"Headsets\",\n          \"options\": [\n            {\n              \"id\": \"{{productId}}\",\n              \"type\": \"product\",\n              \"quantity\": 5\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0cd0dfc6-d88c-4a6f-aca9-d14c32dfb27e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const bundleId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"bundleId\", bundleId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete a bundle",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{bundleId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{bundleId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "af09bb46-425b-4773-b283-8941e9b0218f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product's nodes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/nodes",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "nodes"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8a551e1c-f20c-4fe6-9d0e-948bfa42e300",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const nodeId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"nodeId\", nodeId)",
                  "d.each((item, index) => pm.environment.set(`nodeId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get a product's file relationships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4fe84dad-547a-42a4-93b2-d53bc01fbc2e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileId\", fileId)",
                  "d.each((item, index) => pm.environment.set(`fileId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Create product file relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-1\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-2\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3e0a6662-1fc1-4dd2-840a-3abf1e55afdd",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const fileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"fileId\", fileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Replace a products's file relationships",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-3\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-4\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "db670001-e637-404d-8c3d-47d0840fd53e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product's file relationships",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/files",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "files"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"file\",\n      \"id\": \"file-3\"\n    },\n    {\n      \"type\": \"file\",\n      \"id\": \"file-4\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b48bebc5-4186-4595-8989-0cd9805c0178",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a product's variation relationships",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6a31aae1-e8d9-482c-84bf-bd73d7eb187d",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationId\", variationId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create product variation relationships",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "10c0b39d-421f-4a1f-bafa-ed232f1f4c96",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Replace a products's variations relationships",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4c98d073-17e8-4f98-b79d-e13b6923dea0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product's variation relationships",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/relationships/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "relationships",
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": [\n    {\n      \"type\": \"product-variation\",\n      \"id\": \"{{variationId}}\"\n    }\n  ]\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "913e055a-ac22-4312-b4a3-ad23142a0d96",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Builds child products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/products/{{productId}}/build",
              "host": "{{pcmUrl}}",
              "path": [
                "products",
                "{{productId}}",
                "build"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e9cd7271-75a0-4eb7-9967-b43a197ba7c7",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const pimJobId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"pimJobId\", pimJobId)"
                ]
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "productsLegacy",
      "item": [
        {
          "name": "Get all products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": "{{baseUrl}}",
              "path": [
                "products"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "080fc08e-9226-4064-a25f-b89d1d96290f",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)",
                  "d.each((item, index) => pm.environment.set(`productId${index + 1}`, item.id))",
                  "d.each((item, index) => pm.environment.set(`productSku${index + 1}`, item.sku))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single product",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "deade225-f3ca-4839-8fe4-bc2560c312a6",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)"
                ]
              }
            }
          ]
        },
        {
          "name": "Create a product",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": "{{baseUrl}}",
              "path": [
                "products"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product\",\n    \"name\": \"Desk lamp\",\n    \"slug\": \"desk-lamp\",\n    \"sku\": \"desk-lamp-001\",\n    \"manage_stock\": false,\n    \"description\": \"A cool desk lamp\",\n    \"status\": \"live\",\n    \"commodity_type\": \"physical\",\n    \"price\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"GBP\",\n        \"includes_tax\": true\n      }\n    ]\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "2cc6610a-0bfc-4613-a3d5-7afa158271dd",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const productID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"productID\", productID)",
                  "const productSKU = Array.isArray(d) ? d[0].sku : d.sku",
                  "pm.environment.set(\"productSKU\", productSKU)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{productID}}\",\n    \"type\": \"product\",\n    \"name\": \"Desk lamp\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3cfee8c5-3cc5-46c9-84e3-5bd9d9ccc192",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "38f025f0-c3df-4c0d-a0eb-d9670c36241e",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "promotions",
      "item": [
        {
          "name": "promotions_management",
          "item": [
            {
              "name": "Get all promotions",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ],
                  "query": [
                    {
                      "key": "page[offset]",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "page[limit]",
                      "value": "10",
                      "disabled": true
                    }
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d5fa1eec-6b8c-46d5-9063-6300ad4c1c36",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)",
                      "d.each((item, index) => pm.environment.set(`promotionId${index + 1}`, item.id))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a promotion",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "252aeb95-aaea-4628-bce7-9b2ace72e718",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get a promotion history",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/history",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "history"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "31376c67-6a69-4533-9758-599ad4325525",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create a cart fixed discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"$10 off\",\n    \"description\": \"$10 off your order!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"fixed_discount\",\n    \"min_cart_value\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"currency\": \"USD\",\n          \"amount\": 1000\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"sku1\",\n          \"sku2\"\n        ],\n        \"nodes\": [\n          \"{{nodeId}}\"\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}, {{nodeId2}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue1}}\"\n                    ]\n                  }\n                }\n              ]\n            },\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId3}}, {{nodeId4}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue2}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      },\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5e080ce4-51cb-4f4f-ae7e-57e090379dd2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"10% off\",\n    \"description\": \"10% off your order!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"percent_discount\",\n    \"max_discount_value\": [\n      {\n        \"amount\": 1000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"min_cart_value\": [\n      {\n        \"amount\": 10000,\n        \"currency\": \"USD\"\n      }\n    ],\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"currency\": \"USD\",\n          \"percentage\": 10\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"sku1\",\n          \"sku2\"\n        ],\n        \"nodes\": [\n          \"{{nodeId}}\"\n        ],\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue}}\"\n          }\n        ]\n      },\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2164446b-c354-4125-b4ea-32ddb701bbf9",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a X for Y discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"X for Y promotion example\",\n    \"description\": \"2 for 1 promotion for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"x_for_y\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"x\": 2,\n      \"y\": 1,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId}}\"\n      ],\n      \"target_attributes\": [\n        {\n          \"template\": \"{{templateName}}\",\n          \"field\": \"{{fieldName}}\",\n          \"type\": \"{{fieldType}}\",\n          \"value\": \"{{fieldValue}}\"\n        }\n      ],\n      \"target_conditions\": {\n        \"or\": [\n          {\n            \"and\": [\n              {\n                \"node\": {\n                  \"values\": [\n                    \"{{nodeId1}}\",\n                    \"{{nodeId2}}\"\n                  ]\n                }\n              },\n              {\n                \"attribute\": {\n                  \"template\": \"{{templateName}}\",\n                  \"field\": \"{{fieldName}}\",\n                  \"type\": \"{{fieldType}}\",\n                  \"values\": [\n                    \"{{fieldValue1}}\"\n                  ]\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"exclude\": {\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue2}}\"\n          }\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue3}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ac1959ff-eade-4bb0-8675-70464bbb766c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a X for amount discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"X for amount promotion example\",\n    \"description\": \"2 for 100 promotion for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"x_for_amount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"x\": 2,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"currencies\": [\n        {\n          \"amount\": 10000,\n          \"currency\": \"USD\"\n        }\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "39e2c08a-4c4f-4fb2-8ec0-f08810a9d474",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a fixed bundle discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Fixed bundle promotion example\",\n    \"description\": \"SKU1 and SKU2 for $150\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"bundle_fixed_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"requirements\": [\n        {\n          \"targets\": [\n            \"SKU1\"\n          ],\n          \"quantity\": 1\n        },\n        {\n          \"targets\": [\n            \"SKU2\"\n          ],\n          \"quantity\": 1\n        }\n      ],\n      \"currencies\": [\n        {\n          \"amount\": 15000,\n          \"currency\": \"USD\"\n        }\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ]\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a7234d52-1706-422b-b438-ee48a60032e5",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a item fixed discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Item fixed discount promotion example\",\n    \"description\": \"$50 for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"item_fixed_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"currencies\": [\n        {\n          \"amount\": 5000,\n          \"currency\": \"USD\"\n        }\n      ],\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId1}}\",\n        \"{{nodeId2}}\"\n      ],\n      \"target_conditions\": {\n        \"or\": [\n          {\n            \"and\": [\n              {\n                \"node\": {\n                  \"values\": [\n                    \"{{nodeId1}}\",\n                    \"{{nodeId2}}\"\n                  ]\n                }\n              },\n              {\n                \"attribute\": {\n                  \"template\": \"{{templateName}}\",\n                  \"field\": \"{{fieldName}}\",\n                  \"type\": \"{{fieldType}}\",\n                  \"values\": [\n                    \"{{fieldValue1}}\"\n                  ]\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"exclude\": {\n        \"targets\": [\n          \"SKU\"\n        ],\n        \"nodes\": [\n          \"{{nodeId1}}\",\n          \"{{nodeId2}}\"\n        ],\n        \"conditions\": {\n          \"or\": [\n            {\n              \"and\": [\n                {\n                  \"node\": {\n                    \"values\": [\n                      \"{{nodeId1}}\"\n                    ]\n                  }\n                },\n                {\n                  \"attribute\": {\n                    \"template\": \"{{templateName}}\",\n                    \"field\": \"{{fieldName}}\",\n                    \"type\": \"{{fieldType}}\",\n                    \"values\": [\n                      \"{{fieldValue3}}\"\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "8656e471-5299-4d97-b8d6-02994015e791",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a item percent discount promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Item percent discount promotion example\",\n    \"description\": \"50% off for SKU1\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"promotion_type\": \"item_percent_discount\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"percent\": 50,\n      \"targets\": [\n        \"SKU1\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"target_nodes\": [\n        \"{{nodeId1}}\",\n        \"{{nodeId2}}\"\n      ],\n      \"target_attributes\": [\n        {\n          \"template\": \"{{templateName}}\",\n          \"field\": \"{{fieldName}}\",\n          \"type\": \"{{fieldType}}\",\n          \"value\": \"{{fieldValue}}\"\n        }\n      ],\n      \"exclude\": {\n        \"targets\": [\n          \"SKU\"\n        ],\n        \"nodes\": [\n          \"{{nodeId3}}\",\n          \"{{nodeId4}}\"\n        ],\n        \"attributes\": [\n          {\n            \"template\": \"{{templateName}}\",\n            \"field\": \"{{fieldName}}\",\n            \"type\": \"{{fieldType}}\",\n            \"value\": \"{{fieldValue}}\"\n          }\n        ]\n      }\n    },\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "94ed395c-5ea6-4263-a691-293cd2c177cb",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a free gift promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"name\": \"Buy SKU1 and SKU2 to get free gift\",\n    \"description\": \"SKU1 and SKU2 for free gift\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"promotion_type\": \"bundle_gift\",\n    \"max_applications_per_cart\": 0,\n    \"schema\": {\n      \"requirements\": [\n        {\n          \"targets\": [\n            \"SKU1\"\n          ],\n          \"quantity\": 1\n        },\n        {\n          \"targets\": [\n            \"SKU2\"\n          ],\n          \"quantity\": 1\n        }\n      ],\n      \"gifts\": [\n        \"gift\"\n      ],\n      \"target_catalogs\": [\n        \"{{catalogId}}\"\n      ],\n      \"auto_add_free_gift\": false\n    },\n    \"start\": \"2020-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6047962d-0a39-4a46-bd57-022bcbf1fb4b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Update a promotion",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion\",\n    \"id\": \"{{promotionID}}\",\n    \"name\": \"Promotion name\",\n    \"description\": \"description\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"start\": \"2000-01-01\",\n    \"end\": \"2100-01-01\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "903864e9-f91f-41cb-ab6d-5910f991ab8c",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "02349129-b8d6-4872-bf4d-01ad91cb223b",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "promotion_codes",
          "item": [
            {
              "name": "Get promotion codes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9ddd29ef-415f-4171-b391-63603e4953a2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promoCode = Array.isArray(d) ? d[0].code : d.code",
                      "pm.environment.set(\"promoCode\", promoCode)",
                      "d.each((item, index) => pm.environment.set(`promoCode${index + 1}`, item.code))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create promotion codes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"ABCXYZ\"\n      },\n      {\n        \"code\": \"ABC\",\n        \"user\": \"{customerID}\",\n        \"uses\": 10\n      },\n      {\n        \"code\": \"5uses\",\n        \"uses\": 5,\n        \"consume_unit\": \"per_item\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a089e21d-b5b7-4ccc-b3bd-b89db6937e7b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promoCode = Array.isArray(d) ? d[0].code : d.code",
                      "pm.environment.set(\"promoCode\", promoCode)",
                      "d.each((item, index) => pm.environment.set(`promoCode${index + 1}`, item.code))"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes/{code}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes",
                    "{code}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a8761566-a43c-4e1e-8c30-921c1e0309ec",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete multiple promotion codes",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"ABCXYZ\"\n      },\n      {\n        \"code\": \"ABC\",\n        \"user\": \"{customerID}\",\n        \"uses\": 10\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d06f1c7d-5df9-4159-abc0-e9ebb2c75e01",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create promotion codes generation job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_job\",\n    \"job_type\": \"code_generate\",\n    \"name\": \"job\",\n    \"parameters\": {\n      \"number_of_codes\": 1,\n      \"max_uses_per_code\": 1,\n      \"consume_unit\": \"per_cart\",\n      \"code_prefix\": \"promo-\",\n      \"code_length\": 8\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "896ad3e7-5b36-40c8-a7c3-2dc6948aa358",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create export promotion codes job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_job\",\n    \"job_type\": \"code_export\",\n    \"name\": \"export promo codes job\"\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a823ad20-428b-45af-b3d7-83eaf4af1087",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Cancel a promotion job",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs/{{promotionJobID}}/cancel",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs",
                    "{{promotionJobID}}",
                    "cancel"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {}\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ac86898f-55a0-4f17-8519-fd67836659b7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get promotion jobs",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "49964b3e-7837-4a76-957d-f165e655d91c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionJobID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionJobID\", promotionJobID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get promotion code export file",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/jobs/{{jobID}}/file",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "jobs",
                    "{{jobID}}",
                    "file"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3e91ff6b-16c6-463c-847d-7f9820ed8a47",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "promotion_usages",
          "item": [
            {
              "name": "Get promotion usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c937aed3-be7b-45d9-878b-ebe64818d612",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Get single promotion code usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions/{{promotionID}}/codes/{{promoCode}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "{{promotionID}}",
                    "codes",
                    "{{promoCode}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2cfc69c8-baa5-4181-98cb-764dc486072d",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Filter promotion usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "EP-Public-Search-Type",
                    "value": "cm_search",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "df6d9a54-2014-48e7-a0e2-40b830c279ea",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Anonymize promotion usages",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/promotions/usages/anonymize",
                  "host": "{{baseUrl}}",
                  "path": [
                    "promotions",
                    "usages",
                    "anonymize"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"usage_ids\": [\n      \"{{usageID_1}}\",\n      \"{{usageID_2}}\"\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c5903c5c-0737-445e-b07f-725fa92d5655",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotions_management",
          "item": [
            {
              "name": "Update a rule promotion",
              "request": {
                "method": "PUT",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"$10 off cart promotion update\",\n    \"description\": \"$10 off your order update!\",\n    \"enabled\": true,\n    \"automatic\": false,\n    \"start\": \"2023-01-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    },\n    \"priority\": 100,\n    \"stackable\": true\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3c9665c5-16b1-41ca-bbc9-ca0a95cdb8b8",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get all rule promotions",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "896f64b4-8d6d-4157-8edf-a9445f89aa74",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Get a rule promotion",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "0282ee80-d35c-4889-9f68-cfdc517a4509",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Delete a rule promotion",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "d327f3b9-f5a1-4ad5-a1d1-de98eceef18d",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "cart_rule_promotions",
          "item": [
            {
              "name": "Create a cart fixed discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"$10 off cart promotion\",\n    \"description\": \"$10 off your order when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "fc7f2128-7182-4d48-a634-7cfc3a99ac5f",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"10 percent off cart promotion\",\n    \"description\": \"10 percent off your order when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            10\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a35605b4-369c-4e5e-8068-44e21300513c",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with max_discount limitation rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart promotion max discount $50\",\n    \"description\": \"50 percent off your order (up to max $50) when cart total greater equal to $100!\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"limitations\": {\n            \"max_discount\": 5000\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "9bf04423-0d0c-4591-9968-4323796cebac",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with custom attribute rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart with custom attribute\",\n    \"description\": \"50 percent off your order when cart member is gold\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_custom_attribute\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"member_status\",\n          \"string\",\n          \"gold\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "270c0d33-d57c-48c0-9b92-bef354016b73",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a cart percent discount with sub conditions",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50 percent off cart excluding exclusive item\",\n    \"description\": \"50 percent off your order excluding exclusive item\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ],\n        \"children\": [\n          {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"exclusiveItem\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"exclusiveItem\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "34b9ad9d-de4b-4dac-91b8-d9a6047a2de7",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "item_rule_promotions",
          "item": [
            {
              "name": "Create an item fixed discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy item get $10 off\",\n    \"description\": \"Buy item get $10 off\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"fixed\",\n            1000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ead493d9-87ad-4240-bafa-2eeaa385cbb2",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item discount with condition rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy X get Y 50%\",\n    \"description\": \"Buy X get Y 50%\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2039acbb-7711-4d02-9c4d-d02d3a9b341b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with limitations and exclusions rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"50% max $10 max 2 items 2 quantities from category\",\n    \"description\": \"Items from category 50% off max $10 off 2 cheapest items with max quantity of 2 excluding one item\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"and\",\n        \"children\": [\n          {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ]\n          },\n          {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"limitations\": {\n            \"max_quantity\": 2,\n            \"max_discount\": 1000,\n            \"items\": {\n              \"max_items\": 2,\n              \"price_strategy\": \"cheapest\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "ad49dea7-a1cd-46a9-b924-375a97ae519b",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with limitation and condition rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy X get one Y for free\",\n    \"description\": \"Buy X get ONLY one Y for free\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            100\n          ],\n          \"limitations\": {\n            \"max_quantity\": 1\n          },\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "22552a64-c86b-4e2c-9ec0-3ac6a85126d1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create a mixed of Cart and Item percent discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy sku1 and get cart 20% off and item sku1 50%\",\n    \"description\": \"Buy sku1 and get cart 20% off and item sku1 50%\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_sku\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{productSku}}\"\n            ]\n          }\n        },\n        {\n          \"strategy\": \"cart_discount\",\n          \"args\": [\n            \"percent\",\n            20\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "2bcdc790-6cb2-4c28-a2eb-727a9e691f1e",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item fixed price discount rule promotion",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy 2 items for $100\",\n    \"description\": \"Buy 2 items for $100\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_sku\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"{{productSku}}\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"fixed_price\",\n            2,\n            10000\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b2932f93-b885-4d7b-ba1c-dab46ad537e1",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with item attribute rule",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Items with item attribute discount\",\n    \"description\": \"All items with attribute brand EP get 20% discount\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"item_attribute\",\n        \"operator\": \"in\",\n        \"args\": [\n          \"products(product_template)\",\n          \"brand\",\n          \"string\",\n          \"EP\"\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            20\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "b87720db-770b-4f5a-92cb-e05367f7bd25",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with sub condition",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Items discount for a category excluding items with attribute\",\n    \"description\": \"50% item discount excluding items with attribute when eligible items exceed $100\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"cart_total\",\n        \"operator\": \"gte\",\n        \"args\": [\n          10000\n        ],\n        \"children\": [\n          {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ]\n          },\n          {\n            \"strategy\": \"item_attribute\",\n            \"operator\": \"nin\",\n            \"args\": [\n              \"products(product_template)\",\n              \"sales\",\n              \"string\",\n              \"sale2024\"\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ],\n          \"condition\": {\n            \"strategy\": \"item_category\",\n            \"operator\": \"in\",\n            \"args\": [\n              \"{{categoryID}}\"\n            ],\n            \"children\": [\n              {\n                \"strategy\": \"item_attribute\",\n                \"operator\": \"nin\",\n                \"args\": [\n                  \"products(product_template)\",\n                  \"sales\",\n                  \"string\",\n                  \"sale2024\"\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "34fb2542-f33f-4029-a79e-c32dfa0d3fee",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            },
            {
              "name": "Create an item percent discount with item_sku OR item_product_id",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"rule_promotion\",\n    \"name\": \"Buy at least 1 item sku OR skuless bundle get 50% discount\",\n    \"description\": \"Buy at least 1 item sku OR skuless bundle get 50% discount\",\n    \"enabled\": true,\n    \"automatic\": true,\n    \"start\": \"2024-02-01\",\n    \"end\": \"2050-01-01\",\n    \"rule_set\": {\n      \"rules\": {\n        \"strategy\": \"and\",\n        \"children\": [\n          {\n            \"strategy\": \"or\",\n            \"children\": [\n              {\n                \"strategy\": \"item_sku\",\n                \"operator\": \"in\",\n                \"args\": [\n                  \"{{productSku}}\"\n                ]\n              },\n              {\n                \"strategy\": \"item_product_id\",\n                \"operator\": \"in\",\n                \"args\": [\n                  \"{{productId}}\"\n                ]\n              }\n            ]\n          },\n          {\n            \"strategy\": \"item_quantity\",\n            \"operator\": \"gte\",\n            \"args\": [\n              1\n            ]\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"strategy\": \"item_discount\",\n          \"args\": [\n            \"percent\",\n            50\n          ]\n        }\n      ]\n    }\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "a478835b-2113-4006-8334-610d24139099",
                    "exec": [
                      "const json = pm.response.json()",
                      "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                      "const promotionID = Array.isArray(d) ? d[0].id : d.id",
                      "pm.environment.set(\"promotionID\", promotionID)"
                    ]
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotion_codes",
          "item": [
            {
              "name": "Get rule promotion codes",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "6ef72eb5-4a72-45af-a905-9a5a0edcf2b0",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Create rule promotion codes",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"spring2024\"\n      },\n      {\n        \"code\": \"summer2024\",\n        \"consume_unit\": \"per_checkout\"\n      },\n      {\n        \"code\": \"summer2024_limited\",\n        \"uses\": 5,\n        \"consume_unit\": \"per_checkout\"\n      },\n      {\n        \"code\": \"fall2024_limited\",\n        \"uses\": 1,\n        \"consume_unit\": \"per_application\"\n      },\n      {\n        \"code\": \"winter_VIP_limited\",\n        \"uses\": 1,\n        \"consume_unit\": \"per_checkout\",\n        \"user\": \"vip_shopper@email.com\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "3b1e3941-613e-460a-84e7-5b0f64e05700",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete a rule promotion code",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes/{code}",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes",
                    "{code}"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "eac807f1-a786-4663-9aa6-07e8de09adba",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Delete multiple rule promotion codes",
              "request": {
                "method": "DELETE",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"type\": \"promotion_codes\",\n    \"codes\": [\n      {\n        \"code\": \"spring2024\"\n      },\n      {\n        \"code\": \"summer2024\"\n      },\n      {\n        \"code\": \"summer2024_limited\"\n      },\n      {\n        \"code\": \"fall2024_limited\"\n      },\n      {\n        \"code\": \"winter_VIP_limited\"\n      }\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "156d87ff-5a51-4977-a9cd-27bb0b999e84",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "rule_promotions_usages",
          "item": [
            {
              "name": "Filter promotion usages",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "c88643c4-cfdd-4775-a65d-b39267ae628b",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Filter promotion usages by code",
              "request": {
                "method": "GET",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/{{promotionID}}/codes/{{promoCode}}/usages",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "{{promotionID}}",
                    "codes",
                    "{{promoCode}}",
                    "usages"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5b6b85b4-014c-4954-9c23-b390cde3fbde",
                    "exec": []
                  }
                }
              ]
            },
            {
              "name": "Anonymize Rule Promotion usages",
              "request": {
                "method": "POST",
                "url": {
                  "raw": "{{baseUrl}}/rule-promotions/usages/anonymize",
                  "host": "{{baseUrl}}",
                  "path": [
                    "rule-promotions",
                    "usages",
                    "anonymize"
                  ]
                },
                "header": [
                  {
                    "key": "accept",
                    "value": "application/json",
                    "disabled": false
                  },
                  {
                    "key": "content-type",
                    "value": "application/json",
                    "disabled": false
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{accessToken}}",
                      "type": "string"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"data\": {\n    \"usage_ids\": [\n      \"{{usageID1}}\",\n      \"{{usageID2}}\"\n    ]\n  }\n}"
                }
              },
              "event": [
                {
                  "type": "text/javascript",
                  "listen": "test",
                  "script": {
                    "id": "5426c956-3593-4894-85ff-d803fbc22036",
                    "exec": []
                  }
                }
              ]
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_isSubFolder": true
    },
    {
      "name": "realms",
      "item": [
        {
          "name": "Get authentication realms",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bb400774-f803-4899-a8e0-27c99387ff14",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get authentication realm",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4d61e170-0fca-4d16-ad3a-43b3ca7a9371",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update authentication realms",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"authentication-realm\",\n    \"name\": \"Test Authentication Realm\",\n    \"redirect_uris\": [\n      \"https://example.com\"\n    ],\n    \"relationships\": {\n      \"origin\": {\n        \"data\": {\n          \"id\": \"{{storeId}}\",\n          \"type\": \"customer-authentication-settings\"\n        }\n      }\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8dda4c84-d321-433f-8e2b-140fd8cf9816",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "settings",
      "item": [
        {
          "name": "Get settings attributes",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/attributes",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "attributes"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "927c0428-8d05-4791-9443-42cb8799a480",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c5193296-49b6-40d6-b6f2-c61930a03ef1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"settings\",\n    \"calculation_method\": \"line\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6d2f3af0-8f70-4d5e-b3a4-bae804d3d29b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete settings",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/settings",
              "host": "{{baseUrl}}",
              "path": [
                "settings"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "42ce0e45-3bc4-41bb-94b7-8ac701fc2a5e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get cart settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/cart",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "cart"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "73d7c04b-3f8b-4eff-93a5-02eebbb23012",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update cart settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/cart",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "cart"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"settings\",\n    \"cart_expiry_days\": 7,\n    \"discounts\": {\n      \"custom_discounts_enabled\": false,\n      \"use_rule_promotions\": false\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c8d9eb44-d136-49c4-b03e-fc6c80987351",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get account membership settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/settings/account-membership",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-membership"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "df31592e-011a-4b9f-96ec-4d8e4b17ba54",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update account membership settings",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/settings/account-membership",
              "host": "{{baseUrl}}",
              "path": [
                "settings",
                "account-membership"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"account_membership_setting\",\n    \"membership_limit\": 13\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cb088479-1b4f-41d5-8ac0-fd631d84d006",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "transactions",
      "item": [
        {
          "name": "Get order transactions",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7d854b85-c95c-4128-b561-fa003f999079",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a transaction",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8ee4fc85-2a63-4a46-9476-cbeeee9ba89e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const transactionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"transactionID\", transactionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Capture a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/capture",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "capture"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"custom_reference\": \"customRef123\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "40a76494-f0bd-4c07-81b8-136de4812e83",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Refund a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/refund",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "refund"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"amount\": 1\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "837b437b-a74b-4abd-abc2-fb51ea013806",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Cancel a transaction",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderID}}/transactions/{{transactionID}}/cancel",
              "host": "{{baseUrl}}",
              "path": [
                "orders",
                "{{orderID}}",
                "transactions",
                "{{transactionID}}",
                "cancel"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"reason\": \"requested_by_customer\",\n    \"options\": {}\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c6f5130e-3d1a-4d90-8242-cde8c82d96c5",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationInfo",
      "item": [
        {
          "name": "Get all user authentication info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f9bb5633-2282-41a4-a496-746b02e422eb",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get user authentication info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "be9a62d5-146b-4e74-85b3-1e15b0a67e00",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create user authentication info",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                ""
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_info\",\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@banks.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5a4594ed-6607-4f31-a046-47edc0706fd8",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationInfoId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationInfoId\", userAuthenticationInfoId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update user authentication info",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_info\",\n    \"name\": \"John Doe Updated\",\n    \"email\": \"john.doe@banks.com\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "429f3e3d-ba42-4a79-b524-50bcdb2e4624",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete user authentication info",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f4eb49f2-9a21-49d4-b239-4eaf65580b86",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationOidcProfileInfo",
      "item": [
        {
          "name": "Get all user authentication OIDC profile info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8a1063ef-5f31-417e-8e68-096272f6ca8b",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get user authentication OIDC profile info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "4374d455-f447-4258-b561-74f24881bcb4",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create user authentication OIDC profile info",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_oidc_profile_info\",\n    \"subject\": \"Test Subject\",\n    \"issuer\": \"{{oidcProfileIssuer}}\",\n    \"oidc_profile_id\": \"{{oidcProfileId}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c1e60b4a-57e5-4a46-8ed8-7a43d3490e65",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationOIDCProfileInfoId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationOIDCProfileInfoId\", userAuthenticationOIDCProfileInfoId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update user authentication OIDC profile info",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_oidc_profile_info\",\n    \"subject\": \"Test Subject Updated\",\n    \"issuer\": \"{{oidcProfileIssuer}}\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "51a5b579-7cca-4690-adbe-d207f959e64c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete user authentication OIDC profile info",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-oidc-profile-info/{{userAuthenticationOIDCProfileInfoId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-oidc-profile-info",
                "{{userAuthenticationOIDCProfileInfoId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "cc0aa52b-00c9-4a40-a0e8-c63dd3cbde6f",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "userAuthenticationPasswordProfiles",
      "item": [
        {
          "name": "Get User Authentication Password Profiles",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "8d95daec-7051-4599-a45f-b4f11e472896",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get User Authentication Password Profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7586dd07-e50b-488c-acf6-789144f3b58c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create User Authentication Password Profile",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"user_authentication_password_profile_info\",\n    \"password_profile_id\": \"{{passwordProfileId}}\",\n    \"username\": \"john.doe\",\n    \"password\": \"password\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "54e1e8b6-c446-47d4-9eba-da08a2764b1a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const userAuthenticationPasswordProfileId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"userAuthenticationPasswordProfileId\", userAuthenticationPasswordProfileId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update User Authentication Password Profile",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{userAuthenticationPasswordProfileId}}\",\n    \"type\": \"user_authentication_password_profile_info\",\n    \"username\": \"john.doe\",\n    \"password\": \"password.new\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "5629a15e-fcef-4570-8792-2d019d3343da",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete User Authentication Password profile",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/authentication-realms/{{authenticationRealmId}}/user-authentication-info/{{userAuthenticationInfoId}}/user-authentication-password-profile-info/{{userAuthenticationPasswordProfileId}}",
              "host": "{{baseUrl}}",
              "path": [
                "authentication-realms",
                "{{authenticationRealmId}}",
                "user-authentication-info",
                "{{userAuthenticationInfoId}}",
                "user-authentication-password-profile-info",
                "{{userAuthenticationPasswordProfileId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3e26b368-02be-4ae7-b7dd-d2c799652d77",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "variations",
      "item": [
        {
          "name": "Create a variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"attributes\": {\n      \"name\": \"Size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "71e9839f-1f78-4cf9-84bd-936df8c0c383",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationId\", variationId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all variations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations",
              "host": "{{pcmUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3d326626-1fe1-4766-bb4c-0121a57573a9",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{variationId}}\",\n    \"type\": \"product-variation\",\n    \"attributes\": {\n      \"name\": \"Color\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "a87b7790-96ab-4ceb-bdd4-b97d278bde6a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "9be2fa3d-1072-4c8c-90e7-585d33f0a22f",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c4f52322-3e58-4c6e-adac-e898b436e7e1",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all Options for a Variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "057f7060-8552-48dd-81ec-1a193fd8ca2a",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create an Option for a Variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-option\",\n    \"attributes\": {\n      \"name\": \"Small\",\n      \"description\": \"Products with a small size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "65d5534c-4270-436c-89dd-303352d602e2",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionId\", optionId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get an Option for a Variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f0dc5b91-544f-4335-8dab-8c3a8a2e5e8c",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update an Option for a Variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{optionId}}\",\n    \"type\": \"product-variation-option\",\n    \"attributes\": {\n      \"name\": \"Large\",\n      \"description\": \"Products with a large size\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "3ee74070-16c6-4a51-aa87-c6d796473eb7",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete an Option for a Variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "6a0b858d-a047-462e-af93-aa7130c5f3f0",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a Modifier for an Option",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-modifier\",\n    \"attributes\": {\n      \"type\": \"name_prepend\",\n      \"value\": \"Child Product \"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "45c299ee-c0fd-402f-bcc4-d415e2d68d8a",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierId = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierId\", modifierId)"
                ]
              }
            }
          ]
        },
        {
          "name": "Get all Modifiers for an Option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c62edd8c-334d-4f15-8ff2-cc1e1acfa4aa",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get a Modifier for an Option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f1af6d72-735c-4962-9e07-c58daae757ee",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Update a Modifier for an Option",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{modifierId}}\",\n    \"type\": \"product-variation-modifier\",\n    \"attributes\": {\n      \"type\": \"name_append\",\n      \"value\": \" - A Child Product\"\n    }\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "217b2b16-5082-476b-936f-9c6dac72c947",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a Modifier for an Option",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{pcmUrl}}/variations/{{variationId}}/options/{{optionId}}/modifiers/{{modifierId}}",
              "host": "{{pcmUrl}}",
              "path": [
                "variations",
                "{{variationId}}",
                "options",
                "{{optionId}}",
                "modifiers",
                "{{modifierId}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "dad8250d-cffd-40ad-8bbd-b30a02a6bab0",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    },
    {
      "name": "variationsLegacy",
      "item": [
        {
          "name": "Get all variations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations",
              "host": "{{baseUrl}}",
              "path": [
                "variations"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "38f575f3-adeb-4d38-8f74-5e8d845cdc81",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationID\", variationID)",
                  "d.each((item, index) => pm.environment.set(`variationId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single variation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "d2937779-0cff-4ec0-bf0b-51fdd89d9ba3",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a variation",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations",
              "host": "{{baseUrl}}",
              "path": [
                "variations"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"name\": \"Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "347b4791-b99d-4b5a-b236-90d24da297ad",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const variationID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"variationID\", variationID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a variation",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{variationID}}\",\n    \"type\": \"product-variation\",\n    \"name\": \"Paint Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ec57beb6-147c-46a8-85ec-6401804d6933",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "bbc7e2e2-8110-4fe5-bad3-38c1fa85d418",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all variation options",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c09578da-1532-412e-babb-65f43f7a9c1e",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionID\", optionID)",
                  "d.each((item, index) => pm.environment.set(`optionId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single variation option",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "f9df6b4b-6f3a-45ba-92a4-f3220f2d1069",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a variation option",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation-option\",\n    \"name\": \"BLUE\",\n    \"description\": \"Our most popular color\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "0871c1a1-a273-46d1-b7d7-2c855f6a8465",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const optionID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"optionID\", optionID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a variation option",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{optionID}}\",\n    \"type\": \"product-variation-option\",\n    \"name\": \"RED\",\n    \"description\": \"Reddish\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "85c7f36e-0efa-425b-a5e6-16a1e743345e",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a variation option",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "ba5a9de1-fd5a-4835-a86e-91645bd2b867",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Get all product modifiers",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers"
              ],
              "query": [
                {
                  "key": "page[offset]",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "page[limit]",
                  "value": "10",
                  "disabled": true
                }
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "e6365073-c143-4585-b60e-6954a8fce125",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierID\", modifierID)",
                  "d.each((item, index) => pm.environment.set(`modifierId${index + 1}`, item.id))"
                ]
              }
            }
          ]
        },
        {
          "name": "Get single product modifier",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7b36e714-603c-4b4f-bb07-befc1a073b53",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Create a product modifier",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"modifier\",\n    \"modifier_type\": \"name_equals\",\n    \"value\": \"Promotional product\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "7ceaa44a-a082-4b16-b808-c7ab3300ece0",
                "exec": [
                  "const json = pm.response.json()",
                  "const d = json.hasOwnProperty(\"data\") ? json.data : json",
                  "const modifierID = Array.isArray(d) ? d[0].id : d.id",
                  "pm.environment.set(\"modifierID\", modifierID)"
                ]
              }
            }
          ]
        },
        {
          "name": "Update a product modifier",
          "request": {
            "method": "PUT",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{modifierID}}\",\n    \"type\": \"modifier\",\n    \"modifier_type\": \"name_equals\",\n    \"value\": \"Updated Paint Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "c2561849-3084-4415-9bd7-97569ce368ba",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Delete a product modifier",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/variations/{{variationID}}/options/{{optionID}}/modifiers/{{modifierID}}",
              "host": "{{baseUrl}}",
              "path": [
                "variations",
                "{{variationID}}",
                "options",
                "{{optionID}}",
                "modifiers",
                "{{modifierID}}"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "42eb0d20-1d60-4f29-a3fc-82efe7ac25bb",
                "exec": []
              }
            }
          ]
        },
        {
          "name": "Build child products",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/products/{{productID}}/build",
              "host": "{{baseUrl}}",
              "path": [
                "products",
                "{{productID}}",
                "build"
              ]
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json",
                "disabled": false
              },
              {
                "key": "content-type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"type\": \"product-variation\",\n    \"name\": \"Colour\"\n  }\n}"
            }
          },
          "event": [
            {
              "type": "text/javascript",
              "listen": "test",
              "script": {
                "id": "b7735109-34c2-4e45-8eca-b28d4ab472f8",
                "exec": []
              }
            }
          ]
        }
      ],
      "_postman_isSubFolder": false
    }
  ]
}